<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-12-13T16:40:22" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.5.3</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isLeaf="false" isRoot="false" xmi.id="m1" isAbstract="false" name="UML Model" >
   <UML:Namespace.ownedElement>
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="125" isRoot="false" isAbstract="false" name="datatype" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="141" isRoot="false" isAbstract="false" name="module" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="151" isRoot="false" isAbstract="false" name="program" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="157" isRoot="false" isAbstract="false" name="interface" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16253" isRoot="false" isAbstract="false" name="optional" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="44222" isRoot="false" isAbstract="false" name="constructor" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="44223" isRoot="false" isAbstract="false" name="friend" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="44224" isRoot="false" isAbstract="false" name="virtual" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="219" isRoot="false" isAbstract="false" name="void" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2" isRoot="false" isAbstract="false" name="int" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3" isRoot="false" isAbstract="false" name="char" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="4" isRoot="false" isAbstract="false" name="bool" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="5" isRoot="false" isAbstract="false" name="float" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6" isRoot="false" isAbstract="false" name="db" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7" isRoot="false" isAbstract="false" name="long" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="8" isRoot="false" isAbstract="false" name="short" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9" isRoot="false" isAbstract="false" name="string" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="15" isRoot="false" isAbstract="false" name="db(3)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16" isRoot="false" isAbstract="false" name="char(2)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="19" isRoot="false" isAbstract="false" name="atom(:)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="22" isRoot="false" isAbstract="false" name="char(120)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="32" isRoot="false" isAbstract="false" name="logical" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="68" isRoot="false" isAbstract="false" name="dictionary_t" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="91" isRoot="false" isAbstract="false" name="new_datatype" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="95" isRoot="false" isAbstract="false" name="int(:,:)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="1378" isRoot="false" isAbstract="false" name="atom" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="1460" isRoot="false" isAbstract="false" name="fnc_constraint" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="1525" isRoot="false" isAbstract="false" name="constraints" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="1577" isRoot="false" isAbstract="false" name="configuration" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="1882" isRoot="false" isAbstract="false" name="structure" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2197" isRoot="false" isAbstract="false" name="lj_pe_container" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2595" isRoot="false" isAbstract="false" name="cutoff_constraint" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3247" isRoot="false" isAbstract="false" name="histogram" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3637" isRoot="false" isAbstract="false" name="rdf" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3914" isRoot="false" isAbstract="false" name="fom_list" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6336" isRoot="false" isAbstract="false" name="func_param" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6395" isRoot="false" isAbstract="false" name="func_params" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6445" isRoot="false" isAbstract="false" name="char(20)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7295" isRoot="false" isAbstract="false" name="db(:,:)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7530" isRoot="false" isAbstract="false" name="near_neighb_list" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7874" isRoot="false" isAbstract="false" name="core_loop_md_extra" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="8643" isRoot="false" isAbstract="false" name="phasespace" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9185" isRoot="false" isAbstract="false" name="md_properties" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9927" isRoot="false" isAbstract="false" name="func_list" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="13237" isRoot="false" isAbstract="false" name="cell_list" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16437" isRoot="false" isAbstract="false" name="rdf_fom_container" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16589" isRoot="false" isAbstract="false" name="int(ndim)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="28559" isRoot="false" isAbstract="false" name="xmlf_t" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="42763" isRoot="false" isAbstract="false" name="histogram_cutdown" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="41996" isRoot="false" isAbstract="false" name="list" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="34562" isRoot="false" isAbstract="false" name="histrogram" />
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="23" isRoot="false" isAbstract="false" name="structure_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="25" isRoot="false" isAbstract="false" isQuery="false" name="swap_atoms" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="2" value="" type="2" name="num1" />
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="3" value="" type="2" name="num2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14810" isRoot="false" isAbstract="false" isQuery="false" name="apply_boundary_condition" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14825" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14854" isRoot="false" isAbstract="false" isQuery="false" name="copy_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49149" type="1882" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14855" value="" type="1882" name="s_in" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41141" isRoot="false" isAbstract="false" isQuery="false" name="shallow_copy_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41142" value="" type="1882" name="s_in" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="41158" value="" type="1882" name="s_out" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16114" isRoot="false" isAbstract="false" isQuery="false" name="save_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16115" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16131" value="" type="3" name="filename" />
        <UML:Parameter stereotype="16253" isSpecification="false" visibility="private" xmi.id="16147" value="" type="6" name="temperature(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="30" isRoot="false" isAbstract="false" name="fnc_constraint_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="33" isRoot="false" isAbstract="false" isQuery="false" name="validate_fnc_constraint" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49150" type="32" />
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4379" value="" type="1460" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="34" isRoot="false" isAbstract="false" name="configuration_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="35" isRoot="false" isAbstract="false" isQuery="false" name="is_valid_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49151" type="32" />
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="1577" name="c" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="57" isRoot="false" isAbstract="false" name="common_block_class" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="public" xmi.id="58" type="1577" name="common_config" />
      <UML:Attribute isSpecification="false" visibility="protected" xmi.id="60" type="1460" name="target_fnc_constr" />
      <UML:Attribute isSpecification="false" visibility="protected" xmi.id="2910" type="2595" name="target_cutoff_constr" />
      <UML:Attribute isSpecification="false" visibility="public" xmi.id="16299" type="9927" name="common_pe_list" />
      <UML:Attribute isSpecification="false" visibility="public" xmi.id="16315" type="9927" name="common_fom_list" />
      <UML:Attribute isSpecification="false" visibility="protected" xmi.id="16331" type="2197" name="target_lj_pe" />
      <UML:Attribute isSpecification="false" visibility="protected" xmi.id="16468" type="16437" name="target_rdf_fom" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="61" isRoot="false" isAbstract="false" name="handler_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17375" isRoot="false" isAbstract="false" isQuery="false" name="startup_handler" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17376" value="" type="3" name="filename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="67" isRoot="false" isAbstract="false" isQuery="false" name="begin_element" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="2" value="" type="68" name="attributes" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="70" isRoot="false" isAbstract="false" isQuery="false" name="start_document" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="71" isRoot="false" isAbstract="false" isQuery="false" name="pcdata_chunk" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="3" name="chunk" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="72" isRoot="false" isAbstract="false" isQuery="false" name="end_element" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="3" name="name" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="73" isRoot="false" isAbstract="false" isQuery="false" name="end_document" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="151" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="62" isRoot="false" isAbstract="false" name="mdmc" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="64" isRoot="false" isAbstract="false" isQuery="false" name="mdmc" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="3" name="filename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="65" isRoot="false" isAbstract="false" name="structure_reader_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="66" isRoot="false" isAbstract="false" isQuery="false" name="make_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="3" name="filename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="9401" isRoot="false" isAbstract="false" isQuery="false" name="make_simple_cubic_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9402" value="" type="6" name="density" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9411" value="" type="16589" name="n_atoms" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16650" isRoot="false" isAbstract="false" isQuery="false" name="make_fcc_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16651" value="" type="6" name="density" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16667" value="" type="16589" name="n_atoms" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="74" isRoot="false" isAbstract="false" name="fnc_constraint_reader" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="75" isRoot="false" isAbstract="false" isQuery="false" name="make_fnc_constraint" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="3" name="filename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="76" isRoot="false" isAbstract="false" name="md_control_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="77" isRoot="false" isAbstract="false" isQuery="false" name="run_md_control" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="157" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="87" isRoot="false" isAbstract="false" name="add_constraint" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="88" isRoot="false" isAbstract="false" isQuery="false" name="add_fnc_constraint" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="1577" name="c" />
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="2" value="" type="1460" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="2532" isRoot="false" isAbstract="false" isQuery="false" name="add_cutoff_constraint" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="2533" value="" type="1577" name="c" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="2606" value="" type="2595" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="97" isRoot="false" isAbstract="false" name="mc_control_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="99" isRoot="false" isAbstract="false" isQuery="false" name="run_mc_control" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="100" isRoot="false" isAbstract="false" name="phasespace_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14915" isRoot="false" isAbstract="false" isQuery="false" name="trajectory_in_phasespace" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14916" value="" type="8643" name="ps" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="20545" value="" type="9927" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14947" value="" type="2" name="Nmd" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14963" value="" type="6" name="del_t" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14979" value="" type="6" name="press_comp(o)" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14995" value="" type="6" name="epot(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="12577" isRoot="false" isAbstract="false" isQuery="false" name="make_phasespace" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49152" type="8643" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="12578" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="12608" value="" type="6" name="temperature" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41480" isRoot="false" isAbstract="false" isQuery="false" name="copy_phasespace" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49153" type="8643" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41481" value="" type="8643" name="ps_in" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41513" isRoot="false" isAbstract="false" isQuery="false" name="shallow_copy_phasespace" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41514" value="" type="8643" name="ps_in" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="41531" value="" type="8643" name="ps_out" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="104" isRoot="false" isAbstract="false" name="chi_squared" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="1129" isRoot="false" isAbstract="false" name="function_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1983" isRoot="false" isAbstract="false" isQuery="false" name="func_val" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49154" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1987" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="7775" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14408" isRoot="false" isAbstract="false" isQuery="false" name="func_deriv" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14409" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14424" value="" type="7295" name="deriv" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14439" value="" type="9927" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14454" value="" type="6" name="press_comp(o)" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14469" value="" type="6" name="epot(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="33987" isRoot="false" isAbstract="false" isQuery="false" name="func_accum_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="33988" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="34005" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="34054" isRoot="false" isAbstract="false" isQuery="false" name="func_clear_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="34055" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="34072" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Interface stereotype="157" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2103" isRoot="false" isAbstract="true" name="add_function" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="2137" isRoot="false" isAbstract="false" isQuery="false" name="add_lj_pe_container" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="2183" value="" type="9927" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="2188" value="" type="2197" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="19902" isRoot="false" isAbstract="false" isQuery="false" name="add_rdf_fom_container" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="19919" value="" type="9927" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="19936" value="" type="16437" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Interface>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2506" isRoot="false" isAbstract="false" name="cutoff_constraint_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="2511" isRoot="false" isAbstract="false" isQuery="false" name="validate_cutoff_constraint" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49155" type="32" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="2512" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4429" value="" type="2595" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3143" isRoot="false" isAbstract="false" name="histogram_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="3218" isRoot="false" isAbstract="false" isQuery="false" name="cal_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="3219" value="" type="3247" name="h" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="3385" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="3230" isRoot="false" isAbstract="false" isQuery="false" name="make_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="3231" value="" type="6" name="r_max" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="3396" value="" type="6" name="bin_length" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="18363" isRoot="false" isAbstract="false" isQuery="false" name="copy_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49156" type="3247" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18364" value="" type="3247" name="h_in" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41312" isRoot="false" isAbstract="false" isQuery="false" name="shallow_copy_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41313" value="" type="3247" name="h_in" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="41329" value="" type="3247" name="h_out" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="33697" isRoot="false" isAbstract="false" isQuery="false" name="accum_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="33698" value="" type="34562" name="h" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="33717" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="33754" isRoot="false" isAbstract="false" isQuery="false" name="clear_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="33755" value="" type="3247" name="h" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3149" isRoot="false" isAbstract="false" name="rdf_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="3618" isRoot="false" isAbstract="false" isQuery="false" name="make_rdf" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49157" type="3637" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4686" value="" type="6" name="volume" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4694" value="" type="2" name="n_atoms" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4702" value="" type="6" name="r_max" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18668" value="" type="6" name="bin_length" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="18719" isRoot="false" isAbstract="false" isQuery="false" name="save_rdf" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18720" value="" type="3637" name="r" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18738" value="" type="6" name="temperature(o)" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18756" value="" type="6" name="density(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="18808" isRoot="false" isAbstract="false" isQuery="false" name="cal_rdf" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18809" value="" type="3637" name="r" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18827" value="" type="3247" name="h" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3155" isRoot="false" isAbstract="false" name="rdf_fom_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="3668" isRoot="false" isAbstract="false" isQuery="false" name="rdf_fom_val" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49158" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="3669" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="4573" value="" type="16437" name="c" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Interface stereotype="157" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3864" isRoot="false" isAbstract="true" name="add_fom" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="4036" isRoot="false" isAbstract="false" isQuery="false" name="add_pdf_fom" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4065" value="" type="3914" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4073" value="" type="4021" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Interface>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="5341" isRoot="false" isAbstract="false" name="mdmc_control_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5363" isRoot="false" isAbstract="false" isQuery="false" name="run_mdmc_control" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6175" isRoot="false" isAbstract="false" name="func_param_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="6311" isRoot="false" isAbstract="false" isQuery="false" name="get_func_param_val" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49159" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="6370" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="6428" value="" type="3" name="name" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="6526" isRoot="false" isAbstract="false" isQuery="false" name="set_func_param_val" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="6527" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="6536" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="6545" value="" type="6" name="val" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="21122" isRoot="false" isAbstract="false" isQuery="false" name="add_func_param" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21123" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21140" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21173" value="" type="6" name="val" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="21206" isRoot="false" isAbstract="false" isQuery="false" name="does_func_param_exist" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49160" type="4" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21207" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21224" value="" type="3" name="name" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28471" isRoot="false" isAbstract="false" isQuery="false" name="write_func_param_to_file" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28506" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28524" value="" type="28559" name="xf" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28594" isRoot="false" isAbstract="false" isQuery="false" name="random_move_func_params" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28595" value="" type="6395" name="p" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28630" isRoot="false" isAbstract="false" isQuery="false" name="set_func_param_min" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28631" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28649" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28667" value="" type="6" name="min" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28702" isRoot="false" isAbstract="false" isQuery="false" name="set_func_param_max" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28720" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28738" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28756" value="" type="6" name="max" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28791" isRoot="false" isAbstract="false" isQuery="false" name="set_func_param_fixed" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28792" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28810" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28828" value="" type="4" name="fixed" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28863" isRoot="false" isAbstract="false" isQuery="false" name="set_func_param_max_move" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28864" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28882" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28900" value="" type="6" name="max_move" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41234" isRoot="false" isAbstract="false" isQuery="false" name="xml_add_attribute_func_params" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="41235" value="" type="28559" name="xf" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41251" value="" type="6395" name="p" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7481" isRoot="false" isAbstract="false" name="structure_nn_methods" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="13109" isRoot="false" isAbstract="false" isQuery="false" name="build_near_neighb" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13110" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="12918" isRoot="false" isAbstract="false" isQuery="false" name="make_near_neighb_list" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="12919" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="12930" value="" type="6" name="r_cut" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="12941" value="" type="6" name="delta_r" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="9042" isRoot="false" isAbstract="false" isQuery="false" name="update_nn_list_flags" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9043" value="" type="6" name="max_an_atom_has_moved, nn_list" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="42014" isRoot="false" isAbstract="false" isQuery="false" name="copy_near_neighb_list" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49161" type="7530" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42015" value="" type="7530" name="nn_in" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="42049" isRoot="false" isAbstract="false" isQuery="false" name="shallow_copy_near_neighb_list" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42050" value="" type="7530" name="nn_in" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="42068" value="" type="7530" name="nn_out" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="14709" isRoot="false" isAbstract="false" isQuery="false" name="cal_nn_distances" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14710" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="7555" isRoot="false" isAbstract="false" isQuery="false" name="build_near_neighb_with_cell" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="7556" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="13062" isRoot="false" isAbstract="false" isQuery="false" name="build_near_neighb_without_cell" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13063" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="13167" isRoot="false" isAbstract="false" isQuery="false" name="get_num_near_neighb" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13168" value="" type="13237" name="c" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13180" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13192" value="" type="2" name="r_cut_neighbour" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="13319" isRoot="false" isAbstract="false" isQuery="false" name="get_num_near_neighb_with_cell" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49162" type="2" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13320" value="" type="13237" name="c" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13333" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13346" value="" type="6" name="r_cut_neighbour" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="13282" isRoot="false" isAbstract="false" isQuery="false" name="get_num_near_neighb_without_cell" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49163" type="2" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13283" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13295" value="" type="6" name="r_cut_neighbour" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="42120" isRoot="false" isAbstract="false" isQuery="false" name="copy_cell_list" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49164" type="13237" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42121" value="" type="13237" name="l_in" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="42175" isRoot="false" isAbstract="false" isQuery="false" name="shallow_copy_cell_list" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42176" value="" type="13237" name="l_in" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="42195" value="" type="13237" name="l_out" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9100" isRoot="false" isAbstract="false" name="md_property_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9133" isRoot="false" isAbstract="false" isQuery="false" name="md_cal_properties" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9134" value="" type="8643" name="ps" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9152" value="" type="9185" name="props" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="15236" value="" type="9927" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21666" value="" type="6" name="press_comp(o)" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21684" value="" type="6" name="epot(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9210" isRoot="false" isAbstract="false" isQuery="false" name="md_accum_properties" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9211" value="" type="9185" name="props" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9228" isRoot="false" isAbstract="false" isQuery="false" name="md_reset_properties" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9237" value="" type="9185" name="props" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9254" isRoot="false" isAbstract="false" isQuery="false" name="md_print_properties" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9255" value="" type="9185" name="props" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="21719" isRoot="false" isAbstract="false" isQuery="false" name="md_cal_properties_not_extra" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21720" value="" type="8643" name="ps" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21738" value="" type="9185" name="props" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21773" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="21791" isRoot="false" isAbstract="false" isQuery="false" name="md_cal_properties_extra" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21792" value="" type="8643" name="ps" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21810" value="" type="9185" name="props" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21828" value="" type="9927" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21863" value="" type="6" name="press_comp" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21881" value="" type="6" name="epot" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="15556" isRoot="false" isAbstract="false" name="new_package" >
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="15556" xmi.id="578" isRoot="false" isAbstract="false" name="lennard_jones_class" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="750" isRoot="false" isAbstract="false" isQuery="false" name="lj_val" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="49165" type="6" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="751" value="" type="1882" name="s" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="4480" value="" type="2197" name="c" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="14246" isRoot="false" isAbstract="false" isQuery="false" name="lj_deriv" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="14247" value="" type="1882" name="s" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="14262" value="" type="7295" name="deriv" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="14291" value="" type="2197" name="c" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="14306" value="" type="6" name="press_comp(o)" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="14321" value="" type="6" name="epot(o)" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="13541" isRoot="false" isAbstract="false" isQuery="false" name="lj_val_nn" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="49166" type="6" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="13542" value="" type="1882" name="s" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="13556" value="" type="2197" name="c" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="34185" isRoot="false" isAbstract="false" isQuery="false" name="lj_val_without_nn" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="34186" value="" type="1882" name="s" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="34203" value="" type="2197" name="c" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
     </UML:Namespace.ownedElement>
    </UML:Package>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17314" isRoot="false" isAbstract="false" name="handler_structure_part_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17527" isRoot="false" isAbstract="false" isQuery="false" name="handler_structure_part" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17543" value="" type="3" name="filename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="46742" isRoot="false" isAbstract="false" isQuery="false" name="begin_element" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="46743" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="46787" value="" type="68" name="attributes" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="46809" isRoot="false" isAbstract="false" isQuery="false" name="start_document" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="46831" isRoot="false" isAbstract="false" isQuery="false" name="pcdata_chunk" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="46832" value="" type="3" name="chunk" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="46875" isRoot="false" isAbstract="false" isQuery="false" name="end_element" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="46897" value="" type="3" name="name" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="46919" isRoot="false" isAbstract="false" isQuery="false" name="end_document" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="23387" isRoot="false" isAbstract="false" name="functions" >
     <UML:Namespace.ownedElement/>
    </UML:Package>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="25003" isRoot="false" isAbstract="false" name="func_params_wrapper_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28190" isRoot="false" isAbstract="false" isQuery="false" name="move_random_func_params" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28191" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41644" isRoot="false" isAbstract="false" isQuery="false" name="add_xml_attribute_func_params" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="41645" value="" type="28559" name="xf" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41662" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41743" isRoot="false" isAbstract="false" isQuery="false" name="backup_func_params" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41744" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41777" isRoot="false" isAbstract="false" isQuery="false" name="restore_func_params" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="41778" value="" type="41996" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="27425" isRoot="false" isAbstract="false" name="algorithms" >
     <UML:Namespace.ownedElement/>
    </UML:Package>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="27443" isRoot="false" isAbstract="false" name="handlers" >
     <UML:Namespace.ownedElement/>
    </UML:Package>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="27620" isRoot="false" isAbstract="false" name="all_constraints" >
     <UML:Namespace.ownedElement/>
    </UML:Package>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="29550" isRoot="false" isAbstract="false" name="structure_type_definitions" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="33460" isRoot="false" isAbstract="false" isQuery="false" name="apply_boundary_condition_one_atom" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="33515" value="" type="15" name="vec" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="33534" value="" type="15" name="box_edges" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="42422" isRoot="false" isAbstract="false" name="time_correlation_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="42441" isRoot="false" isAbstract="false" isQuery="false" name="init_time_correlation" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42442" value="" type="2" name="n_time_buffers" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42461" value="" type="2" name="n_time_evals" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42480" value="" type="2" name="n_atoms" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42499" value="" type="6" name="r_max" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42518" value="" type="6" name="bin_length" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="42555" isRoot="false" isAbstract="false" isQuery="false" name="do_time_correlation" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42556" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42593" value="" type="2" name="n_buffer_average_over" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42612" value="" type="6" name="time_step" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42649" value="" type="6" name="temperature(o)" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42668" value="" type="6" name="density(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="42705" isRoot="false" isAbstract="false" isQuery="false" name="cal_g_s_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49167" type="6" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="42706" value="" type="42763" name="g_s_hist" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42802" value="" type="7295" name="org_r" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42822" value="" type="7295" name="act_r" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="42842" isRoot="false" isAbstract="false" isQuery="false" name="cal_g_d_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49168" type="6" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="42862" value="" type="42763" name="g_d_hist" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42882" value="" type="7295" name="org_r" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42902" value="" type="7295" name="act_r" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="42942" isRoot="false" isAbstract="false" isQuery="false" name="make_histogram_cutdown" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="49169" type="42763" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42943" value="" type="6" name="r_max" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42964" value="" type="6" name="bin_length" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="43006" isRoot="false" isAbstract="false" isQuery="false" name="clear_time_correlation" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="43028" isRoot="false" isAbstract="false" isQuery="false" name="update_act_r" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="43029" value="" type="7295" name="act_r" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43051" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="43115" isRoot="false" isAbstract="false" isQuery="false" name="print_g_d" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43116" value="" type="6" name="temperature" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43138" value="" type="6" name="density" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43160" value="" type="6" name="time_step" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43182" value="" type="2" name="n_buffer_average_over" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="43225" isRoot="false" isAbstract="false" isQuery="false" name="print_g_s" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43247" value="" type="6" name="temperature" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43269" value="" type="6" name="density" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43291" value="" type="6" name="time_step" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43313" value="" type="2" name="n_buffer_average_over" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="43356" isRoot="false" isAbstract="false" isQuery="false" name="print_einstein_diffuse_exp" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43357" value="" type="6" name="temperature" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43379" value="" type="6" name="density" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43401" value="" type="6" name="time_step" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="44898" isRoot="false" isAbstract="false" name="readers" >
     <UML:Namespace.ownedElement/>
    </UML:Package>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="47468" isRoot="false" isAbstract="false" name="g_d_readers" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="47553" isRoot="false" isAbstract="false" isQuery="false" name="make_g_d_data_array" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="47554" value="" type="3" name="filename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="48714" isRoot="false" isAbstract="false" name="md_control_time_corr_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="48864" isRoot="false" isAbstract="false" isQuery="false" name="run_md_control_time_corr" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="48736" isRoot="false" isAbstract="false" name="mdmc_control_time_corr_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="48907" isRoot="false" isAbstract="false" isQuery="false" name="run_mdmc_control_time_corr" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="48758" isRoot="false" isAbstract="false" name="md_gridsearch_control_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="48950" isRoot="false" isAbstract="false" isQuery="false" name="run_md_gridsearch_control" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="44" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="169" aggregation="none" type="30" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="170" aggregation="none" type="23" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="56" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="177" aggregation="none" type="34" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="178" aggregation="none" type="30" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="78" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="179" aggregation="none" type="57" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="180" aggregation="none" type="34" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="79" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="181" aggregation="none" type="65" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="182" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="80" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="183" aggregation="none" type="74" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="184" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="81" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="185" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="186" aggregation="none" type="65" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="82" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="187" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="188" aggregation="none" type="74" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="83" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="189" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="190" aggregation="none" type="76" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="84" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="191" aggregation="none" type="62" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="192" aggregation="none" type="61" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="89" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="193" aggregation="composite" type="87" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="194" aggregation="none" type="34" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="111" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="195" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="196" aggregation="none" type="97" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="112" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="197" aggregation="none" type="76" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="198" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="113" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="199" aggregation="none" type="97" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="200" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="114" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="201" aggregation="none" type="100" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="202" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="115" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="203" aggregation="none" type="76" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="204" aggregation="none" type="100" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="119" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="211" aggregation="none" type="104" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="212" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="980" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="981" aggregation="none" type="34" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="982" aggregation="none" type="87" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="1053" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="1054" aggregation="none" type="578" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1055" aggregation="none" type="23" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="1713" client="34" name="" supplier="87" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="2214" client="1129" name="" supplier="2103" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="2233" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="2234" aggregation="none" type="1129" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="2235" aggregation="none" type="578" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="2622" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="2623" aggregation="none" type="2506" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="2624" aggregation="none" type="23" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="2635" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="2636" aggregation="none" type="34" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="2637" aggregation="none" type="2506" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="4738" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="4739" aggregation="none" type="3149" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="4740" aggregation="none" type="3143" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="4755" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="4756" aggregation="none" type="3149" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="4757" aggregation="none" type="23" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="4772" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="4773" aggregation="none" type="3155" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="4774" aggregation="none" type="3149" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="5960" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="5961" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5962" aggregation="none" type="5341" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="5977" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="5978" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5979" aggregation="none" type="97" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="5994" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="5995" aggregation="none" type="76" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5996" aggregation="none" type="100" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="6011" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="6012" aggregation="none" type="76" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="6013" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="6028" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="6029" aggregation="none" type="5341" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="6030" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="6045" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="6046" aggregation="none" type="97" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="6047" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="6941" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="6942" aggregation="none" type="578" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="6943" aggregation="none" type="6175" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="7086" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="7087" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="7088" aggregation="none" type="1129" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="7217" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="7218" aggregation="none" type="1129" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="7219" aggregation="none" type="578" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="7671" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="7672" aggregation="none" type="7481" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="7673" aggregation="none" type="23" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="7690" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="7691" aggregation="none" type="578" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="7692" aggregation="none" type="7481" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="8758" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="8759" aggregation="none" type="100" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="8760" aggregation="none" type="1129" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="8777" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="8778" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="8779" aggregation="none" type="100" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="8966" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="8967" aggregation="none" type="5341" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="8968" aggregation="none" type="100" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="17664" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="17665" aggregation="none" type="62" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="17666" aggregation="none" type="17314" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="17847" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="17848" aggregation="none" type="17314" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="17849" aggregation="none" type="65" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="18105" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="18106" aggregation="none" type="3143" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="18107" aggregation="none" type="23" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="22409" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="22410" aggregation="none" type="9100" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="22411" aggregation="none" type="100" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="22497" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="22498" aggregation="none" type="57" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="22499" aggregation="none" type="9100" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="23473" client="23387" name="" supplier="23" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="23510" client="23387" name="" supplier="6175" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="23547" client="23387" name="" supplier="7481" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="24181" client="1129" name="" supplier="23387" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="25072" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="25073" aggregation="none" type="57" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="25074" aggregation="none" type="25003" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="26149" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="26150" aggregation="none" type="7481" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="26151" aggregation="none" type="3143" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="26203" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="26204" aggregation="none" type="7481" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="26205" aggregation="none" type="3143" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="26427" client="23387" name="" supplier="3149" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="27252" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="27253" aggregation="none" type="25003" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="27254" aggregation="none" type="1129" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="27546" client="27425" name="" supplier="57" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="27583" client="27443" name="" supplier="27425" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="27809" client="34" name="" supplier="27620" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="27846" client="27620" name="" supplier="23" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="31083" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="31084" aggregation="none" type="7481" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="31085" aggregation="none" type="29550" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="31118" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="31119" aggregation="none" type="23" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="31120" aggregation="none" type="7481" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="45046" client="62" name="" supplier="27443" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="45091" client="27443" name="" supplier="27425" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="45136" client="27443" name="" supplier="44898" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="45181" client="44898" name="" supplier="57" />
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="2473" documentation="" uniqueid="49169" />
  <diagrams>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1280" snapy="10" showatts="1" xmi.id="1" documentation="" type="402" showops="1" showpackage="0" name="constraint" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="995" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="420" showattsigs="601" usesdiagramusefillcolour="0" x="403" y="108" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="110" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="23" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="412" showattsigs="601" usesdiagramusefillcolour="0" x="142" y="536" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="30" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="296" showattsigs="601" usesdiagramusefillcolour="0" x="396" y="713" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="34" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="250" showattsigs="601" usesdiagramusefillcolour="0" x="487" y="815" showopsigs="601" linewidth="none" fillcolour="#ffffff" height="144" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="57" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="390" showattsigs="601" usesdiagramusefillcolour="0" x="747" y="696" showopsigs="601" linewidth="none" fillcolour="#ffffff" height="76" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="87" showoperations="1" showpackage="0" showscope="1" showstereotype="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#00ff00" />
     <notewidget usesdiagramfillcolour="1" width="372" usesdiagramusefillcolour="1" x="30" y="296" linewidth="none" fillcolour="none" height="211" usefillcolor="1" isinstance="0" xmi.id="1420" text="  type fnc_group
    integer :: atomindex
    integer, dimension(:), pointer :: neighbour_index
    integer, dimension(:), pointer :: constraint_type_id
  end type fnc_group

  type fnc_constraint
    type (fnc_group), dimension(:), pointer :: fnc_groups
    real(db), dimension(:), pointer :: rmin
    real(db), dimension(:), pointer :: rmax
  end type fnc_constraint" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="0" width="444" showattsigs="601" usesdiagramusefillcolour="0" x="617" y="532" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="2506" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="197" usesdiagramusefillcolour="1" x="798" y="403" linewidth="none" fillcolour="none" height="69" usefillcolor="1" isinstance="0" xmi.id="2564" text="type cutoff_constraint
    double precision :: cutoff
end type cutoff_constraint" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <boxwidget usesdiagramfillcolour="1" width="100" usesdiagramusefillcolour="1" x="40" y="359" linewidth="none" fillcolour="none" height="80" usefillcolor="1" isinstance="0" xmi.id="2793" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#000000" />
     <boxwidget usesdiagramfillcolour="1" width="1119" usesdiagramusefillcolour="1" x="12" y="275" linewidth="none" fillcolour="none" height="342" usefillcolor="1" isinstance="0" xmi.id="2799" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#000000" />
     <notewidget usesdiagramfillcolour="1" width="268" usesdiagramusefillcolour="1" x="31" y="656" linewidth="none" fillcolour="none" height="93" usefillcolor="1" isinstance="0" xmi.id="12113" text="  type configuration
    type (structure) :: str
    type (constraints) :: constr_list
  end type configuration" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <notewidget usesdiagramfillcolour="1" width="415" usesdiagramusefillcolour="1" x="13" y="810" linewidth="none" fillcolour="none" height="109" usefillcolor="1" isinstance="0" xmi.id="12213" text="  type constraints
    private
    type (fnc_constraint), pointer :: pt_fnc_constraint => null()
  !  type (cutoff_constraint), pointer :: pt_cutoff_constraint 
  end type constraints" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <floatingtext usesdiagramfillcolour="1" width="277" usesdiagramusefillcolour="1" x="38" y="32" linewidth="none" posttext="" role="700" fillcolour="none" height="31" usefillcolor="1" pretext="" isinstance="0" xmi.id="45815" showstereotype="1" text="Constraint stuff expanded" font="Sans,16,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="1" linewidth="none" widgetbid="23" widgetaid="30" xmi.id="44" linecolor="none" >
      <linepath>
       <startpoint startx="416" starty="536" />
       <endpoint endx="543" endy="218" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="30" widgetaid="34" xmi.id="56" linecolor="none" >
      <linepath>
       <startpoint startx="494" starty="713" />
       <endpoint endx="348" endy="578" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" linewidth="none" widgetbid="34" widgetaid="57" xmi.id="78" linecolor="none" >
      <linepath>
       <startpoint startx="612" starty="815" />
       <endpoint endx="593" endy="755" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="1" linewidth="none" widgetbid="30" widgetaid="1420" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="216" starty="507" />
       <endpoint endx="279" endy="536" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="87" widgetaid="34" xmi.id="1713" linecolor="none" >
      <linepath>
       <startpoint startx="692" starty="734" />
       <endpoint endx="747" endy="734" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="2564" widgetaid="2506" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="913" starty="532" />
       <endpoint endx="896" endy="472" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="2" linewidth="none" widgetbid="23" widgetaid="2506" xmi.id="2622" linecolor="none" >
      <linepath>
       <startpoint startx="765" starty="532" />
       <endpoint endx="683" endy="218" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" linewidth="none" widgetbid="2506" widgetaid="34" xmi.id="2635" linecolor="none" >
      <linepath>
       <startpoint startx="593" starty="713" />
       <endpoint endx="839" endy="574" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="34" widgetaid="12113" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="299" starty="702" />
       <endpoint endx="396" endy="734" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="12213" widgetaid="34" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="494" starty="755" />
       <endpoint endx="220" endy="810" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1265" snapy="10" showatts="1" xmi.id="1860" documentation="" type="402" showops="1" showpackage="0" name="around_functions" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1145" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="420" showattsigs="601" usesdiagramusefillcolour="0" x="42" y="24" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="110" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="23" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="486" showattsigs="601" usesdiagramusefillcolour="0" x="700" y="412" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="212" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="6175" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="324" usesdiagramusefillcolour="1" x="867" y="645" linewidth="none" fillcolour="none" height="254" usefillcolor="1" isinstance="0" xmi.id="6219" text="type func_param
  private
  character(len=99) :: name
  real(db) :: val  
  logical :: fixed = .true.
  real(db) :: min, max
  real(db) :: max_move
end type func_param

integer, parameter, private    :: MAX_ITEMS = 64
type func_params
  integer :: number_of_items = 0
  type (func_param), dimension(MAX_ITEMS) :: p
end type func_params" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <packagewidget usesdiagramfillcolour="1" width="70" usesdiagramusefillcolour="1" x="557" y="845" linewidth="none" fillcolour="none" height="46" usefillcolor="1" isinstance="0" xmi.id="23387" font="Sans,10,-1,5,75,1,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="0" width="540" showattsigs="601" usesdiagramusefillcolour="0" x="410" y="1045" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="93" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1129" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="375" usesdiagramusefillcolour="1" x="6" y="1038" linewidth="none" fillcolour="none" height="103" usefillcolor="1" isinstance="0" xmi.id="24061" text="  type func_list
    !private
    type (lj_pe_container), pointer :: pt_lj_pe => null()
    type (rdf_fom_container), pointer :: pt_rdf_fom => null()
  end type func_list" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <interfacewidget usesdiagramfillcolour="0" width="375" usesdiagramusefillcolour="0" x="732" y="936" drawascircle="0" showopsigs="601" linewidth="none" fillcolour="#ffffff" height="68" usefillcolor="1" showpubliconly="0" isinstance="0" xmi.id="2103" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,1,0,0,0,0" linecolor="#00ff00" />
     <classwidget usesdiagramfillcolour="0" width="407" showattsigs="601" usesdiagramusefillcolour="0" x="50" y="168" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="127" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="3143" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="455" showattsigs="601" usesdiagramusefillcolour="0" x="80" y="459" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="76" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="3149" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="287" usesdiagramusefillcolour="1" x="513" y="157" linewidth="none" fillcolour="none" height="121" usefillcolor="1" isinstance="0" xmi.id="25960" text="  type histogram
    real(db) :: bin_length    [AA]
    integer, dimension(:), allocatable :: val
    integer, dimension(:), allocatable :: sum
    integer :: n_accum
  end type histogram" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <notewidget usesdiagramfillcolour="1" width="299" usesdiagramusefillcolour="1" x="316" y="324" linewidth="none" fillcolour="none" height="103" usefillcolor="1" isinstance="0" xmi.id="25961" text="type rdf
  real(db) :: bin_length [AA]
  real(db), dimension(:), allocatable :: val   
  real(db), dimension(:), allocatable :: prefac 
end type rdf" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <floatingtext usesdiagramfillcolour="1" width="364" usesdiagramusefillcolour="1" x="774" y="30" linewidth="none" posttext="" role="700" fillcolour="none" height="31" usefillcolor="1" pretext="" isinstance="0" xmi.id="45984" showstereotype="1" text="Stuff around function class expanded" font="Sans,16,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" linewidth="none" widgetbid="6175" widgetaid="6219" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="1029" starty="645" />
       <endpoint endx="1024" endy="624" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="1" linewidth="none" widgetbid="6175" widgetaid="23387" xmi.id="23510" linecolor="none" >
      <linepath>
       <startpoint startx="603" starty="845" />
       <endpoint endx="862" endy="624" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="1129" widgetaid="24061" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="381" starty="1089" />
       <endpoint endx="410" endy="1091" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" linewidth="none" widgetbid="2103" widgetaid="1129" xmi.id="2214" linecolor="none" >
      <linepath>
       <startpoint startx="770" starty="1045" />
       <endpoint endx="919" endy="1004" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="23387" widgetaid="1129" xmi.id="24181" linecolor="none" >
      <linepath>
       <startpoint startx="590" starty="1045" />
       <endpoint endx="592" endy="891" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="25960" widgetaid="3143" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="457" starty="231" />
       <endpoint endx="513" endy="217" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="25961" widgetaid="3149" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="383" starty="459" />
       <endpoint endx="465" endy="427" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="3143" widgetaid="3149" xmi.id="4738" linecolor="none" >
      <linepath>
       <startpoint startx="231" starty="459" />
       <endpoint endx="253" endy="295" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="23" widgetaid="3143" xmi.id="18105" linecolor="none" >
      <linepath>
       <startpoint startx="253" starty="168" />
       <endpoint endx="252" endy="134" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="3149" widgetaid="23387" xmi.id="26427" linecolor="none" >
      <linepath>
       <startpoint startx="580" starty="845" />
       <endpoint endx="307" endy="535" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1265" snapy="10" showatts="1" xmi.id="2473" documentation="" type="402" showops="1" showpackage="0" name="overview" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1257" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="420" showattsigs="601" usesdiagramusefillcolour="0" x="41" y="36" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="110" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="23" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="486" showattsigs="601" usesdiagramusefillcolour="0" x="633" y="186" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="212" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="6175" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <packagewidget usesdiagramfillcolour="0" width="70" usesdiagramusefillcolour="0" x="581" y="497" linewidth="none" fillcolour="#ffffc0" height="46" usefillcolor="1" isinstance="0" xmi.id="23387" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="540" showattsigs="601" usesdiagramusefillcolour="0" x="264" y="559" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="93" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1129" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="407" showattsigs="601" usesdiagramusefillcolour="0" x="49" y="170" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="127" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="3143" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="455" showattsigs="601" usesdiagramusefillcolour="0" x="24" y="327" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="76" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="3149" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="250" showattsigs="601" usesdiagramusefillcolour="0" x="601" y="946" showopsigs="601" linewidth="none" fillcolour="#ffffff" height="144" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="57" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="702" showattsigs="601" usesdiagramusefillcolour="0" x="62" y="668" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="93" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="100" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="676" showattsigs="601" usesdiagramusefillcolour="0" x="64" y="785" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="127" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="9100" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="379" showattsigs="601" usesdiagramusefillcolour="0" x="784" y="725" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="93" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="25003" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <packagewidget usesdiagramfillcolour="1" width="77" usesdiagramusefillcolour="1" x="607" y="1126" linewidth="none" fillcolour="none" height="46" usefillcolor="1" isinstance="0" xmi.id="27425" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="none" />
     <packagewidget usesdiagramfillcolour="1" width="124" usesdiagramusefillcolour="1" x="678" y="1207" linewidth="none" fillcolour="none" height="46" usefillcolor="1" isinstance="0" xmi.id="27443" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="none" />
     <packagewidget usesdiagramfillcolour="1" width="101" usesdiagramusefillcolour="1" x="1114" y="854" linewidth="none" fillcolour="none" height="46" usefillcolor="1" isinstance="0" xmi.id="27620" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="0" width="296" showattsigs="601" usesdiagramusefillcolour="0" x="905" y="998" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="34" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="161" showattsigs="601" usesdiagramusefillcolour="0" x="385" y="1208" showopsigs="601" linewidth="none" fillcolour="#ffa858" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="62" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#400000" />
     <packagewidget usesdiagramfillcolour="1" width="70" usesdiagramusefillcolour="1" x="807" y="1128" linewidth="none" fillcolour="none" height="46" usefillcolor="1" isinstance="0" xmi.id="44898" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="none" />
     <floatingtext usesdiagramfillcolour="1" width="277" usesdiagramusefillcolour="1" x="884" y="9" linewidth="none" posttext="" role="700" fillcolour="none" height="31" usefillcolor="1" pretext="" isinstance="0" xmi.id="45394" showstereotype="1" text="Overview" font="Sans,16,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="6175" widgetaid="23387" xmi.id="23510" linecolor="none" >
      <linepath>
       <startpoint startx="616" starty="497" />
       <endpoint endx="876" endy="398" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="23387" widgetaid="1129" xmi.id="24181" linecolor="none" >
      <linepath>
       <startpoint startx="534" starty="559" />
       <endpoint endx="616" endy="543" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="3143" widgetaid="3149" xmi.id="4738" linecolor="none" >
      <linepath>
       <startpoint startx="251" starty="327" />
       <endpoint endx="252" endy="297" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="23" widgetaid="3143" xmi.id="18105" linecolor="none" >
      <linepath>
       <startpoint startx="252" starty="170" />
       <endpoint endx="251" endy="146" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="3149" widgetaid="23387" xmi.id="26427" linecolor="none" >
      <linepath>
       <startpoint startx="581" starty="520" />
       <endpoint endx="251" endy="403" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="100" widgetaid="9100" xmi.id="22409" linecolor="none" >
      <linepath>
       <startpoint startx="402" starty="785" />
       <endpoint endx="413" endy="761" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="9100" widgetaid="57" xmi.id="22497" linecolor="none" >
      <linepath>
       <startpoint startx="601" starty="1018" />
       <endpoint endx="402" endy="912" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="25003" widgetaid="57" xmi.id="25072" linecolor="none" >
      <linepath>
       <startpoint startx="726" starty="946" />
       <endpoint endx="973" endy="818" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" linewidth="none" widgetbid="1129" widgetaid="100" xmi.id="8758" linecolor="none" >
      <linepath>
       <startpoint startx="413" starty="668" />
       <endpoint endx="444" endy="652" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" linewidth="none" widgetbid="1129" widgetaid="25003" xmi.id="27252" linecolor="none" >
      <linepath>
       <startpoint startx="973" starty="725" />
       <endpoint endx="624" endy="652" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" linewidth="none" widgetbid="57" widgetaid="27425" xmi.id="27546" linecolor="none" >
      <linepath>
       <startpoint startx="645" starty="1126" />
       <endpoint endx="684" endy="1090" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="34" widgetaid="57" xmi.id="78" linecolor="none" >
      <linepath>
       <startpoint startx="851" starty="1018" />
       <endpoint endx="905" endy="1019" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="27620" widgetaid="34" xmi.id="27809" linecolor="none" >
      <linepath>
       <startpoint startx="1053" starty="998" />
       <endpoint endx="1164" endy="900" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="23" widgetaid="27620" xmi.id="27846" linecolor="none" >
      <linepath>
       <startpoint startx="1164" starty="854" />
       <endpoint endx="461" endy="91" />
       <point x="1155" y="86" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="27443" widgetaid="62" xmi.id="45046" linecolor="none" >
      <linepath>
       <startpoint startx="546" starty="1229" />
       <endpoint endx="678" endy="1230" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="27425" widgetaid="27443" xmi.id="45091" linecolor="none" >
      <linepath>
       <startpoint startx="719" starty="1207" />
       <endpoint endx="645" endy="1172" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" linewidth="none" widgetbid="44898" widgetaid="27443" xmi.id="45136" linecolor="none" >
      <linepath>
       <startpoint startx="760" starty="1207" />
       <endpoint endx="842" endy="1174" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" linewidth="none" widgetbid="57" widgetaid="44898" xmi.id="45181" linecolor="none" >
      <linepath>
       <startpoint startx="842" starty="1128" />
       <endpoint endx="767" endy="1090" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1280" snapy="10" showatts="1" xmi.id="5186" documentation="" type="402" showops="1" showpackage="0" name="md_expanded" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="995" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="702" showattsigs="601" usesdiagramusefillcolour="0" x="19" y="264" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="93" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="100" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="220" usesdiagramusefillcolour="1" x="73" y="582" linewidth="none" fillcolour="none" height="260" usefillcolor="1" isinstance="0" xmi.id="8985" text="type property
  real(db) :: val
  real(db) :: sum=0.0, sum2=0.0
  real(db) :: ave, esd
end type property

type md_properties
  type (property) :: kin_energy
  type (property) :: tot_energy
  type (property) :: pressure

  integer :: n_accum = 0
end type md_property" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="0" width="676" showattsigs="601" usesdiagramusefillcolour="0" x="32" y="406" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="127" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="9100" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="345" usesdiagramusefillcolour="1" x="44" y="33" linewidth="none" fillcolour="none" height="192" usefillcolor="1" isinstance="0" xmi.id="12486" text="  type phasespace
    type (structure) :: str
    real(db), dimension(:,:), allocatable :: p  
    real(db), dimension(:,:), allocatable :: deriv     
    real(db), dimension(:,:), allocatable :: inv_mass
    real(db), dimension(:,:), allocatable :: p_div_mass
    real(db), dimension(:), allocatable :: v2
    real(db), dimension(:), allocatable :: mass    
  end type phasespace" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <floatingtext usesdiagramfillcolour="1" width="277" usesdiagramusefillcolour="1" x="474" y="72" linewidth="none" posttext="" role="700" fillcolour="none" height="31" usefillcolor="1" pretext="" isinstance="0" xmi.id="48355" showstereotype="1" text="MD stuff expanded" font="Sans,16,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="100" widgetaid="12486" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="216" starty="225" />
       <endpoint endx="370" endy="264" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="9100" widgetaid="8985" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="183" starty="582" />
       <endpoint endx="370" endy="533" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="100" widgetaid="9100" xmi.id="22409" linecolor="none" >
      <linepath>
       <startpoint startx="370" starty="406" />
       <endpoint endx="370" endy="357" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1280" snapy="10" showatts="1" xmi.id="8232" documentation="" type="402" showops="1" showpackage="0" name="constants" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="995" >
    <widgets>
     <notewidget usesdiagramfillcolour="1" width="487" usesdiagramusefillcolour="1" x="16" y="13" linewidth="none" fillcolour="none" height="704" usefillcolor="1" isinstance="0" xmi.id="12058" text="  ! integer, parameter :: db = selected_real_kind(15,307)
  integer, parameter :: db = kind(1.d0)
  
  ! Notice there are places in the code where it is assumed that atoms move
  ! in 3D, in particular in structure_reader.f90
  integer, parameter :: ndim = 3
  
  
  ! values below are copied from Ed Akin's figure 2.1
  
  real(db), parameter:: deg_per_rad  = 57.295779513082320876798155_db
  real(db), parameter:: rad_per_deg  = 0.017453292519943295769237_db

  real(db), parameter:: e_value      =  2.71828182845904523560287_db
  real(db), parameter:: e_recip      =  0.3678794411714423215955238_db
  real(db), parameter:: e_squared    =  7.389056098930650227230427_db
  real(db), parameter:: log10_of_e   =  0.4342944819032518276511289_db

  real(db), parameter:: euler        =  0.5772156649015328606_db
  real(db), parameter:: euler_log    = -0.5495393129816448223_db
  real(db), parameter:: gamma        =  0.577215664901532860606512_db
  real(db), parameter:: gamma_log    = -0.549539312981644822337662_db
  real(db), parameter:: golden_ratio =  1.618033988749894848_db

  real(db), parameter:: ln_2         =  0.6931471805599453094172321_db
  real(db), parameter:: ln_10        =  2.3025850929940456840179915_db
  real(db), parameter:: log10_of_2   =  0.3010299956639811952137389_db

  real(db), parameter:: pi_value     =  3.141592653589793238462643_db
  real(db), parameter:: pi_ln        =  1.144729885849400174143427_db
  real(db), parameter:: pi_log10     =  0.4971498726941338543512683_db
  real(db), parameter:: pi_over_2    =  1.570796326794896619231322_db
  real(db), parameter:: pi_over_3    =  1.047197551196597746154214_db
  real(db), parameter:: pi_over_4    =  0.7853981633974483096156608_db
  real(db), parameter:: pi_recip     =  0.3183098861837906715377675_db
  real(db), parameter:: pi_squared   =  9.869604401089358618834491_db
  real(db), parameter:: pi_sq_root   =  1.772453850905516027298167_db

  real(db), parameter:: sq_root_of_2 =  1.4142135623730950488_db
  real(db), parameter:: sq_root_of_3 =  1.7320508075688772935_db  " font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1280" snapy="10" showatts="1" xmi.id="16728" documentation="" type="402" showops="1" showpackage="0" name="handlers" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="995" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="341" showattsigs="601" usesdiagramusefillcolour="0" x="76" y="91" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="127" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="61" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="321" showattsigs="601" usesdiagramusefillcolour="0" x="489" y="93" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="127" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="17314" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <floatingtext usesdiagramfillcolour="1" width="277" usesdiagramusefillcolour="1" x="318" y="21" linewidth="none" posttext="" role="700" fillcolour="none" height="31" usefillcolor="1" pretext="" isinstance="0" xmi.id="47067" showstereotype="1" text="Handlers" font="Sans,16,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1280" snapy="10" showatts="1" xmi.id="22840" documentation="" type="402" showops="1" showpackage="0" name="function_package" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="995" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="565" showattsigs="601" usesdiagramusefillcolour="0" x="15" y="104" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="93" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="578" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="222" usesdiagramusefillcolour="1" x="660" y="109" linewidth="none" fillcolour="none" height="85" usefillcolor="1" isinstance="0" xmi.id="23165" text="type lj_pe_container  
  type (func_params) :: params
  type (histogram) :: hist
end type lj_pe_container" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="0" width="357" showattsigs="601" usesdiagramusefillcolour="0" x="28" y="292" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="3155" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="221" usesdiagramusefillcolour="1" x="95" y="368" linewidth="none" fillcolour="none" height="222" usefillcolor="1" isinstance="0" xmi.id="25653" text="type rdf_fom_container
  type (rdf) :: rdf_data
  type (rdf) :: rdf_cal
    
  real(db) :: scale_factor = 1.0
  real(db) :: weight = 1.0
    
  character(len=120) :: title = &quot; &quot;
    
  type (func_params) :: params
  type (histogram) :: hist
end type rdf_fom_container" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <floatingtext usesdiagramfillcolour="1" width="277" usesdiagramusefillcolour="1" x="32" y="22" linewidth="none" posttext="" role="700" fillcolour="none" height="31" usefillcolor="1" pretext="" isinstance="0" xmi.id="44288" showstereotype="1" text="Content of function package" font="Sans,16,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="578" widgetaid="23165" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="660" starty="151" />
       <endpoint endx="580" endy="150" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="25653" widgetaid="3155" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="206" starty="334" />
       <endpoint endx="205" endy="368" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1280" snapy="10" showatts="1" xmi.id="29276" documentation="" type="402" showops="1" showpackage="0" name="structure_nn" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="995" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="541" showattsigs="601" usesdiagramusefillcolour="0" x="93" y="412" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="246" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="7481" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="324" usesdiagramusefillcolour="1" x="798" y="39" linewidth="none" fillcolour="none" height="355" usefillcolor="1" isinstance="0" xmi.id="29447" text="type cell_list
  private
  logical :: ignore_cell_method = .true.
  integer, dimension(ndim) :: num_cells
  integer, dimension(:), allocatable :: list
end type cell_list

type near_neighb_list
  logical :: ignore_list = .true.  
  integer, dimension(:), allocatable :: pairs
  integer :: pairs_allocated
  integer :: n_pairs
  logical :: needs_updating = .true.
  real(db) :: delta_r, r_cut
  real(db) :: max_an_atom_has_moved = 0.0_db  
  character(len=2) :: what_is_stored
  real(db), dimension(:), allocatable :: dists 

  type (cell_list) :: cells  
end type near_neighb_list" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="0" width="447" showattsigs="601" usesdiagramusefillcolour="0" x="307" y="328" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="29550" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="420" showattsigs="601" usesdiagramusefillcolour="0" x="153" y="697" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="110" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="23" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="372" usesdiagramusefillcolour="1" x="798" y="406" linewidth="none" fillcolour="none" height="259" usefillcolor="1" isinstance="0" xmi.id="30350" text="type atom
    character(len=2)  :: element_type
    real(db) :: mass         [amu]
    real(db) :: inv_mass   [1/amu]
end type atom

type structure
  type (atom), dimension(:), allocatable :: atoms
  real(db), dimension(:,ndim), allocatable :: r    [AA]
  real(db), dimension(ndim) :: box_edges   [AA]
  character(len=120) :: title =  &quot; &quot;
 
  type (near_neighb_list) :: nn_list
end type structure" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <floatingtext usesdiagramfillcolour="1" width="277" usesdiagramusefillcolour="1" x="100" y="65" linewidth="none" posttext="" role="700" fillcolour="none" height="31" usefillcolor="1" pretext="" isinstance="0" xmi.id="47765" showstereotype="1" text="Structural part expanded" font="Sans,16,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="29447" widgetaid="29550" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="530" starty="328" />
       <endpoint endx="798" endy="216" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="30350" widgetaid="29550" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="605" starty="370" />
       <endpoint endx="798" endy="535" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" linewidth="none" widgetbid="29550" widgetaid="7481" xmi.id="31083" linecolor="none" >
      <linepath>
       <startpoint startx="363" starty="412" />
       <endpoint endx="456" endy="370" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="7481" widgetaid="23" xmi.id="31118" linecolor="none" >
      <linepath>
       <startpoint startx="363" starty="697" />
       <endpoint endx="363" endy="658" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1280" snapy="10" showatts="1" xmi.id="32237" documentation="" type="405" showops="1" showpackage="0" name="nn logic in cal_histogram" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="995" >
    <widgets>
     <activitywidget usesdiagramfillcolour="1" width="10" activityname="" usesdiagramusefillcolour="1" x="568" y="116" linewidth="none" fillcolour="none" height="10" usefillcolor="1" isinstance="0" xmi.id="32274" documentation="" activitytype="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="121" activityname="ignore_list = .false." usesdiagramusefillcolour="1" x="514" y="152" linewidth="none" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="32293" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="0" width="162" activityname="is r_cut_nn > r_cut_data ?" usesdiagramusefillcolour="0" x="493" y="228" linewidth="none" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="32330" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="136" activityname="do not use nn method" usesdiagramusefillcolour="0" x="320" y="275" linewidth="none" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="32349" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="1" width="96" activityname="use nn-method" usesdiagramusefillcolour="1" x="707" y="275" linewidth="none" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="32368" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="20" activityname="" usesdiagramusefillcolour="1" x="564" y="278" linewidth="none" fillcolour="none" height="20" usefillcolor="1" isinstance="0" xmi.id="32621" documentation="" activitytype="3" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="32293" widgetaid="32274" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="573" starty="126" />
       <endpoint endx="574" endy="152" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="32330" widgetaid="32293" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="574" starty="179" />
       <endpoint endx="574" endy="228" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="32621" widgetaid="32330" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="574" starty="255" />
       <endpoint endx="574" endy="278" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="32349" widgetaid="32621" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="564" starty="288" />
       <endpoint endx="456" endy="288" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="22" usesdiagramusefillcolour="1" x="510" y="288" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="49077" text="no" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="32368" widgetaid="32621" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="584" starty="288" />
       <endpoint endx="707" endy="288" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="29" usesdiagramusefillcolour="1" x="645" y="288" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="49078" text="yes" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1265" snapy="10" showatts="1" xmi.id="34777" documentation="" type="405" showops="1" showpackage="0" name="mdmc_control" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1059" >
    <widgets>
     <activitywidget usesdiagramfillcolour="1" width="10" activityname="" usesdiagramusefillcolour="1" x="620" y="12" linewidth="none" fillcolour="none" height="10" usefillcolor="1" isinstance="0" xmi.id="34808" documentation="" activitytype="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="0" width="159" activityname="initial MD equilibration run" usesdiagramusefillcolour="0" x="546" y="119" linewidth="none" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="34824" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="202" activityname="Has MD run reached equilibrium?" usesdiagramusefillcolour="0" x="524" y="207" linewidth="none" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="34885" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="94" activityname="Calculate RDF" usesdiagramusefillcolour="0" x="475" y="363" linewidth="none" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="34946" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="95" activityname="calculate FOM" usesdiagramusefillcolour="0" x="475" y="409" linewidth="none" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="34992" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="71" activityname="save state" usesdiagramusefillcolour="0" x="487" y="456" linewidth="none" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="35038" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="360" usesdiagramusefillcolour="1" x="43" y="373" linewidth="none" fillcolour="none" height="103" usefillcolor="1" isinstance="0" xmi.id="35114" text="Code from mdmc_control.f90

    fom_old = fom_val
    call backup_func_params(common_pe_list)
    call shallow_copy_phasespace(my_ps, my_ps_old) " font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="0" width="179" activityname="repeated MD equilibration run" usesdiagramusefillcolour="0" x="433" y="596" linewidth="none" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="35190" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="202" activityname="Has MD run reached equilibrium?" usesdiagramusefillcolour="0" x="421" y="689" linewidth="none" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="35945" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="1" width="83" activityname="restore state" usesdiagramusefillcolour="1" x="298" y="685" linewidth="none" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="35976" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="0" width="162" activityname="Calculating RDF and FOM" usesdiagramusefillcolour="0" x="441" y="836" linewidth="none" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="36067" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="70" activityname="Metropolis" usesdiagramusefillcolour="0" x="487" y="893" linewidth="none" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="36159" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="195" activityname="Set start Epot parameter values" usesdiagramusefillcolour="0" x="528" y="46" linewidth="none" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="36235" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="1" width="10" activityname="" usesdiagramusefillcolour="1" x="325" y="308" linewidth="none" fillcolour="none" height="10" usefillcolor="1" isinstance="0" xmi.id="36416" documentation="" activitytype="2" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="20" activityname="" usesdiagramusefillcolour="1" x="512" y="302" linewidth="none" fillcolour="none" height="20" usefillcolor="1" isinstance="0" xmi.id="36462" documentation="" activitytype="3" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="20" activityname="" usesdiagramusefillcolour="1" x="512" y="771" linewidth="none" fillcolour="none" height="20" usefillcolor="1" isinstance="0" xmi.id="36692" documentation="" activitytype="3" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="20" activityname="" usesdiagramusefillcolour="1" x="512" y="968" linewidth="none" fillcolour="none" height="20" usefillcolor="1" isinstance="0" xmi.id="36814" documentation="" activitytype="3" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <notewidget usesdiagramfillcolour="1" width="474" usesdiagramusefillcolour="1" x="761" y="61" linewidth="none" fillcolour="none" height="142" usefillcolor="1" isinstance="0" xmi.id="36937" text="Input from mdmc_control.xml:

    &lt;total-steps-initial-equilibration number=&quot;15000&quot; average-over=&quot;1000&quot; />
    &lt;perform-initial-temperature-calibration>
      &lt;total-step-temp-cali number=&quot;8000&quot; />
      &lt;adjust-temp-at-interval number=&quot;200&quot; />
    &lt;/perform-initial-temperature-calibration>
" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="0" width="71" activityname="save state" usesdiagramusefillcolour="0" x="136" y="1024" linewidth="none" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="37073" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="467" usesdiagramusefillcolour="1" x="19" y="150" linewidth="none" fillcolour="none" height="140" usefillcolor="1" isinstance="0" xmi.id="38414" text="When reached md-steps = total-step-temp-cali 
store Etot_end_of_temp_cali.

Then judge if equilibrium has been reached on whether:

  Is temperature at the end of the above MD run within T_target +- 50% ?
  Is Etot_end_of_MD_run within Etot_end_of_temp_cali +- 50% ?" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <notewidget usesdiagramfillcolour="1" width="347" usesdiagramusefillcolour="1" x="643" y="316" linewidth="none" fillcolour="none" height="121" usefillcolor="1" isinstance="0" xmi.id="38895" text="Input from mdmc_control.xml:

    &lt;calculate-rdf>
      &lt;cal-rdf-at-interval number=&quot;50&quot; />
      &lt;average-over-this-many-rdf number=&quot;20&quot; />  
    &lt;/calculate-rdf>" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <notewidget usesdiagramfillcolour="1" width="493" usesdiagramusefillcolour="1" x="672" y="540" linewidth="none" fillcolour="none" height="139" usefillcolor="1" isinstance="0" xmi.id="39721" text="Input from mdmc_control.xml:

    &lt;md-steps-repeated-equilibration number=&quot;10000&quot; average-over=&quot;1000&quot; />
    &lt;perform-repeated-temperature-calibration>
      &lt;total-step-temp-cali-repeated number=&quot;5000&quot; />
      &lt;adjust-temp-at-interval-repeated number=&quot;200&quot; />
    &lt;/perform-repeated-temperature-calibration>" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="189" activityname="Change Epot parameter values" usesdiagramusefillcolour="1" x="428" y="530" linewidth="none" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="40127" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="20" activityname="" usesdiagramusefillcolour="1" x="329" y="533" linewidth="none" fillcolour="none" height="20" usefillcolor="1" isinstance="0" xmi.id="40503" documentation="" activitytype="3" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="20" activityname="" usesdiagramusefillcolour="1" x="329" y="771" linewidth="none" fillcolour="none" height="20" usefillcolor="1" isinstance="0" xmi.id="40519" documentation="" activitytype="3" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <boxwidget usesdiagramfillcolour="1" width="1165" usesdiagramusefillcolour="1" x="38" y="511" linewidth="none" fillcolour="none" height="544" usefillcolor="1" isinstance="0" xmi.id="40914" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#000000" />
     <notewidget usesdiagramfillcolour="1" width="307" usesdiagramusefillcolour="1" x="828" y="845" linewidth="none" fillcolour="none" height="146" usefillcolor="1" isinstance="0" xmi.id="40975" text="Other input from mdmc_control.xml:

    &lt;mc-steps number=&quot;300&quot; /> 
    &lt;temperature-mc val=&quot;0.005&quot; /> 

    &lt;temperature units=&quot;Kelvin&quot; val=&quot;85.0&quot; />
    &lt;time-step units=&quot;10e-13s&quot; val=&quot;0.05&quot; />  " font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36235" widgetaid="34808" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="625" starty="22" />
       <endpoint endx="625" endy="46" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="34824" widgetaid="36235" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="625" starty="73" />
       <endpoint endx="625" endy="119" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36462" widgetaid="34885" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="625" starty="234" />
       <endpoint endx="532" endy="312" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="34946" widgetaid="36462" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="322" />
       <endpoint endx="522" endy="363" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="31" usesdiagramusefillcolour="1" x="532" y="330" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="49079" text="Yes" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36416" widgetaid="36462" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="512" starty="312" />
       <endpoint endx="335" endy="313" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="24" usesdiagramusefillcolour="1" x="421" y="313" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="49080" text="No" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="34992" widgetaid="34946" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="390" />
       <endpoint endx="522" endy="409" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="35038" widgetaid="34992" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="436" />
       <endpoint endx="522" endy="456" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36692" widgetaid="35945" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="716" />
       <endpoint endx="522" endy="771" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36067" widgetaid="36692" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="791" />
       <endpoint endx="522" endy="836" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="31" usesdiagramusefillcolour="1" x="525" y="804" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="49081" text="Yes" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36814" widgetaid="36159" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="920" />
       <endpoint endx="522" endy="968" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="37073" widgetaid="36814" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="988" />
       <endpoint endx="207" endy="1037" />
       <point x="522" y="1037" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="49" usesdiagramusefillcolour="1" x="422" y="1034" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="49082" text="Accept" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="34885" widgetaid="34824" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="625" starty="146" />
       <endpoint endx="625" endy="207" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36937" widgetaid="34824" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="705" starty="132" />
       <endpoint endx="761" endy="132" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="34885" widgetaid="38414" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="486" starty="220" />
       <endpoint endx="524" endy="220" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="38895" widgetaid="34946" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="569" starty="376" />
       <endpoint endx="643" endy="376" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="35945" widgetaid="35190" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="623" />
       <endpoint endx="522" endy="689" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="40127" widgetaid="35038" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="483" />
       <endpoint endx="522" endy="530" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="35190" widgetaid="40127" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="557" />
       <endpoint endx="522" endy="596" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="35038" widgetaid="35114" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="403" starty="424" />
       <endpoint endx="487" endy="469" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="40519" widgetaid="36692" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="512" starty="781" />
       <endpoint endx="349" endy="781" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="24" usesdiagramusefillcolour="1" x="430" y="781" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="49083" text="No" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="40519" widgetaid="36814" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="512" starty="978" />
       <endpoint endx="339" endy="791" />
       <point x="339" y="978" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="45" usesdiagramusefillcolour="1" x="425" y="978" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="49084" text="Reject" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="35976" widgetaid="40519" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="339" starty="771" />
       <endpoint endx="339" endy="712" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="40503" widgetaid="35976" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="339" starty="685" />
       <endpoint endx="339" endy="553" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="40127" widgetaid="40503" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="349" starty="543" />
       <endpoint endx="428" endy="543" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="40503" widgetaid="37073" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="171" starty="1024" />
       <endpoint endx="329" endy="543" />
       <point x="171" y="543" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="39721" widgetaid="35190" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="612" starty="609" />
       <endpoint endx="672" endy="609" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36159" widgetaid="36067" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="863" />
       <endpoint endx="522" endy="893" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1280" snapy="10" showatts="1" xmi.id="42385" documentation="" type="402" showops="1" showpackage="0" name="temp" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="995" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="723" showattsigs="601" usesdiagramusefillcolour="0" x="77" y="348" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="195" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="42422" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="270" usesdiagramusefillcolour="1" x="544" y="191" linewidth="none" fillcolour="none" height="120" usefillcolor="1" isinstance="0" xmi.id="43528" text="type histogram_cutdown   
  real(db) :: bin_length   
  integer, dimension(:), allocatable :: val
end type histogram_cutdown

private histogram_cutdown" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <notewidget usesdiagramfillcolour="1" width="420" usesdiagramusefillcolour="1" x="49" y="101" linewidth="none" fillcolour="none" height="188" usefillcolor="1" isinstance="0" xmi.id="43697" text="type buffer
  integer :: time_count
  real(db), dimension(:,:), allocatable :: org_r, act_r
  real(db), dimension(:), allocatable :: sum_square_diffs
    
  type (histogram_cutdown), dimension(:), allocatable :: g_s_hists
  type (histogram_cutdown), dimension(:), allocatable :: g_d_hists
end type buffer

private buffer" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1280" snapy="10" showatts="1" xmi.id="46216" documentation="" type="402" showops="1" showpackage="0" name="readers" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="995" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="416" showattsigs="601" usesdiagramusefillcolour="0" x="387" y="137" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="76" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="65" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="249" showattsigs="601" usesdiagramusefillcolour="0" x="78" y="123" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="74" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <floatingtext usesdiagramfillcolour="1" width="277" usesdiagramusefillcolour="1" x="289" y="18" linewidth="none" posttext="" role="700" fillcolour="none" height="31" usefillcolor="1" pretext="" isinstance="0" xmi.id="47362" showstereotype="1" text="Readers" font="Sans,16,-1,5,50,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="0" width="244" showattsigs="601" usesdiagramusefillcolour="0" x="79" y="205" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="47468" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1280" snapy="10" showatts="1" xmi.id="47892" documentation="" type="402" showops="1" showpackage="0" name="Controls" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="995" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="129" showattsigs="601" usesdiagramusefillcolour="0" x="59" y="115" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="76" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="128" showattsigs="601" usesdiagramusefillcolour="0" x="448" y="121" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="97" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="148" showattsigs="601" usesdiagramusefillcolour="0" x="245" y="119" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="5341" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <floatingtext usesdiagramfillcolour="1" width="277" usesdiagramusefillcolour="1" x="49" y="27" linewidth="none" posttext="" role="700" fillcolour="none" height="31" usefillcolor="1" pretext="" isinstance="0" xmi.id="48545" showstereotype="1" text="Algorithms (controls)" font="Sans,16,-1,5,50,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="0" width="188" showattsigs="601" usesdiagramusefillcolour="0" x="47" y="202" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="48714" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="207" showattsigs="601" usesdiagramusefillcolour="0" x="291" y="205" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="48736" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="195" showattsigs="601" usesdiagramusefillcolour="0" x="545" y="205" showopsigs="601" linewidth="none" fillcolour="#c0c000" height="42" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="48758" showoperations="1" showpackage="0" showscope="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" label="Views" >
    <listitem open="1" type="801" label="Logical View" >
     <listitem open="1" type="813" id="87" >
      <listitem open="0" type="815" id="88" />
      <listitem open="0" type="815" id="2532" />
     </listitem>
     <listitem open="1" type="813" id="104" />
     <listitem open="0" type="813" id="57" >
      <listitem open="0" type="814" id="58" />
      <listitem open="0" type="814" id="60" />
      <listitem open="0" type="814" id="2910" />
      <listitem open="0" type="814" id="16299" />
      <listitem open="0" type="814" id="16315" />
      <listitem open="0" type="814" id="16331" />
      <listitem open="0" type="814" id="16468" />
     </listitem>
     <listitem open="0" type="813" id="34" >
      <listitem open="0" type="815" id="35" />
     </listitem>
     <listitem open="0" type="813" id="2506" >
      <listitem open="0" type="815" id="2511" />
     </listitem>
     <listitem open="0" type="813" id="30" >
      <listitem open="0" type="815" id="33" />
     </listitem>
     <listitem open="0" type="813" id="74" >
      <listitem open="0" type="815" id="75" />
     </listitem>
     <listitem open="1" type="813" id="6175" >
      <listitem open="0" type="815" id="6311" />
      <listitem open="0" type="815" id="6526" />
      <listitem open="0" type="815" id="21122" />
      <listitem open="0" type="815" id="21206" />
      <listitem open="0" type="815" id="28471" />
      <listitem open="0" type="815" id="28594" />
      <listitem open="0" type="815" id="28630" />
      <listitem open="0" type="815" id="28702" />
      <listitem open="0" type="815" id="28791" />
      <listitem open="0" type="815" id="28863" />
      <listitem open="0" type="815" id="41234" />
     </listitem>
     <listitem open="1" type="813" id="25003" >
      <listitem open="0" type="815" id="28190" />
      <listitem open="0" type="815" id="41644" />
      <listitem open="0" type="815" id="41743" />
      <listitem open="0" type="815" id="41777" />
     </listitem>
     <listitem open="1" type="813" id="1129" >
      <listitem open="0" type="815" id="1983" />
      <listitem open="0" type="815" id="14408" />
      <listitem open="0" type="815" id="33987" />
      <listitem open="0" type="815" id="34054" />
     </listitem>
     <listitem open="1" type="813" id="47468" >
      <listitem open="0" type="815" id="47553" />
     </listitem>
     <listitem open="0" type="813" id="61" >
      <listitem open="0" type="815" id="17375" />
      <listitem open="0" type="815" id="67" />
      <listitem open="0" type="815" id="70" />
      <listitem open="0" type="815" id="71" />
      <listitem open="0" type="815" id="72" />
      <listitem open="0" type="815" id="73" />
     </listitem>
     <listitem open="1" type="813" id="17314" >
      <listitem open="0" type="815" id="17527" />
      <listitem open="0" type="815" id="46742" />
      <listitem open="0" type="815" id="46809" />
      <listitem open="0" type="815" id="46831" />
      <listitem open="0" type="815" id="46875" />
      <listitem open="0" type="815" id="46919" />
     </listitem>
     <listitem open="1" type="813" id="3143" >
      <listitem open="0" type="815" id="3218" />
      <listitem open="0" type="815" id="3230" />
      <listitem open="0" type="815" id="18363" />
      <listitem open="0" type="815" id="41312" />
      <listitem open="0" type="815" id="33697" />
      <listitem open="0" type="815" id="33754" />
     </listitem>
     <listitem open="0" type="813" id="34562" />
     <listitem open="0" type="813" id="41996" />
     <listitem open="0" type="813" id="97" >
      <listitem open="0" type="815" id="99" />
     </listitem>
     <listitem open="0" type="813" id="76" >
      <listitem open="0" type="815" id="77" />
     </listitem>
     <listitem open="1" type="813" id="48714" >
      <listitem open="0" type="815" id="48864" />
     </listitem>
     <listitem open="1" type="813" id="48758" >
      <listitem open="0" type="815" id="48950" />
     </listitem>
     <listitem open="1" type="813" id="9100" >
      <listitem open="0" type="815" id="9133" />
      <listitem open="0" type="815" id="9210" />
      <listitem open="0" type="815" id="9228" />
      <listitem open="0" type="815" id="9254" />
      <listitem open="0" type="815" id="21719" />
      <listitem open="0" type="815" id="21791" />
     </listitem>
     <listitem open="0" type="813" id="62" >
      <listitem open="0" type="815" id="64" />
     </listitem>
     <listitem open="0" type="813" id="5341" >
      <listitem open="0" type="815" id="5363" />
     </listitem>
     <listitem open="1" type="813" id="48736" >
      <listitem open="0" type="815" id="48907" />
     </listitem>
     <listitem open="1" type="813" id="100" >
      <listitem open="0" type="815" id="14915" />
      <listitem open="0" type="815" id="12577" />
      <listitem open="0" type="815" id="41480" />
      <listitem open="0" type="815" id="41513" />
     </listitem>
     <listitem open="0" type="813" id="3149" >
      <listitem open="0" type="815" id="3618" />
      <listitem open="0" type="815" id="18719" />
      <listitem open="0" type="815" id="18808" />
     </listitem>
     <listitem open="1" type="813" id="3155" >
      <listitem open="0" type="815" id="3668" />
     </listitem>
     <listitem open="1" type="813" id="23" >
      <listitem open="0" type="815" id="25" />
      <listitem open="0" type="815" id="14810" />
      <listitem open="0" type="815" id="14854" />
      <listitem open="0" type="815" id="41141" />
      <listitem open="0" type="815" id="16114" />
     </listitem>
     <listitem open="1" type="813" id="7481" >
      <listitem open="0" type="815" id="13109" />
      <listitem open="0" type="815" id="12918" />
      <listitem open="0" type="815" id="9042" />
      <listitem open="0" type="815" id="42014" />
      <listitem open="0" type="815" id="42049" />
      <listitem open="0" type="815" id="14709" />
      <listitem open="0" type="815" id="7555" />
      <listitem open="0" type="815" id="13062" />
      <listitem open="0" type="815" id="13167" />
      <listitem open="0" type="815" id="13319" />
      <listitem open="0" type="815" id="13282" />
      <listitem open="0" type="815" id="42120" />
      <listitem open="0" type="815" id="42175" />
     </listitem>
     <listitem open="0" type="813" id="65" >
      <listitem open="0" type="815" id="66" />
      <listitem open="0" type="815" id="9401" />
      <listitem open="0" type="815" id="16650" />
     </listitem>
     <listitem open="1" type="813" id="29550" >
      <listitem open="0" type="815" id="33460" />
     </listitem>
     <listitem open="1" type="813" id="42422" >
      <listitem open="0" type="815" id="42441" />
      <listitem open="0" type="815" id="42555" />
      <listitem open="0" type="815" id="42705" />
      <listitem open="0" type="815" id="42842" />
      <listitem open="0" type="815" id="42942" />
      <listitem open="0" type="815" id="43006" />
      <listitem open="0" type="815" id="43028" />
      <listitem open="0" type="815" id="43115" />
      <listitem open="0" type="815" id="43225" />
      <listitem open="0" type="815" id="43356" />
     </listitem>
     <listitem open="0" type="817" id="3864" >
      <listitem open="0" type="815" id="4036" />
     </listitem>
     <listitem open="0" type="817" id="2103" >
      <listitem open="0" type="815" id="2137" />
      <listitem open="0" type="815" id="19902" />
     </listitem>
     <listitem open="1" type="818" id="27425" />
     <listitem open="1" type="818" id="27620" />
     <listitem open="1" type="818" id="23387" />
     <listitem open="1" type="818" id="27443" />
     <listitem open="1" type="818" id="15556" >
      <listitem open="1" type="813" id="578" >
       <listitem open="0" type="815" id="750" />
       <listitem open="0" type="815" id="14246" />
       <listitem open="0" type="815" id="13541" />
       <listitem open="0" type="815" id="34185" />
      </listitem>
     </listitem>
     <listitem open="1" type="818" id="44898" />
     <listitem open="1" type="830" label="Datatypes" >
      <listitem open="1" type="829" id="1378" />
      <listitem open="1" type="829" id="19" />
      <listitem open="1" type="829" id="4" />
      <listitem open="1" type="829" id="13237" />
      <listitem open="1" type="829" id="3" />
      <listitem open="1" type="829" id="22" />
      <listitem open="1" type="829" id="16" />
      <listitem open="1" type="829" id="6445" />
      <listitem open="1" type="829" id="1577" />
      <listitem open="1" type="829" id="1525" />
      <listitem open="1" type="829" id="7874" />
      <listitem open="1" type="829" id="2595" />
      <listitem open="1" type="829" id="6" />
      <listitem open="1" type="829" id="15" />
      <listitem open="1" type="829" id="7295" />
      <listitem open="1" type="829" id="68" />
      <listitem open="1" type="829" id="5" />
      <listitem open="1" type="829" id="1460" />
      <listitem open="1" type="829" id="3914" />
      <listitem open="1" type="829" id="9927" />
      <listitem open="1" type="829" id="6336" />
      <listitem open="1" type="829" id="6395" />
      <listitem open="1" type="829" id="3247" />
      <listitem open="1" type="829" id="42763" />
      <listitem open="1" type="829" id="2" />
      <listitem open="1" type="829" id="95" />
      <listitem open="1" type="829" id="16589" />
      <listitem open="1" type="829" id="2197" />
      <listitem open="1" type="829" id="32" />
      <listitem open="1" type="829" id="7" />
      <listitem open="1" type="829" id="9185" />
      <listitem open="1" type="829" id="7530" />
      <listitem open="1" type="829" id="91" />
      <listitem open="1" type="829" id="8643" />
      <listitem open="1" type="829" id="3637" />
      <listitem open="1" type="829" id="16437" />
      <listitem open="1" type="829" id="8" />
      <listitem open="1" type="829" id="9" />
      <listitem open="1" type="829" id="1882" />
      <listitem open="0" type="829" id="219" />
      <listitem open="1" type="829" id="28559" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" label="Use Case View" />
    <listitem open="1" type="821" label="Component View" />
    <listitem open="1" type="827" label="Deployment View" />
    <listitem open="1" type="836" label="Entity Relationship Model" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="C++" >
    <classifiercodedocument writeOutCode="true" package="-1" id="41996" parent_class="41996" fileExt=".cpp" fileName="list" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        list.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="34562" parent_class="34562" fileExt=".cpp" fileName="histrogram" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        histrogram.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="23" parent_class="23" fileExt=".cpp" fileName="structure_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="30" parent_class="30" fileExt=".cpp" fileName="fnc_constraint_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        fnc_constraint_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="34" parent_class="34" fileExt=".cpp" fileName="configuration_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        configuration_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="57" parent_class="57" fileExt=".cpp" fileName="common_block_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;common_block_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        common_block_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:04:42&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="61" parent_class="61" fileExt=".cpp" fileName="handler_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;handler_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="17375" tag="operation_17375" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="67" tag="operation_67" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="70" tag="operation_70" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="71" tag="operation_71" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="72" tag="operation_72" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="73" tag="operation_73" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        handler_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:46:30&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="62" parent_class="62" fileExt=".cpp" fileName="mdmc" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mdmc.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="64" tag="operation_64" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mdmc.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:45:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="65" parent_class="65" fileExt=".cpp" fileName="structure_reader_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;structure_reader_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="66" tag="operation_66" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="9401" tag="operation_9401" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16650" tag="operation_16650" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_reader_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:01:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="74" parent_class="74" fileExt=".cpp" fileName="fnc_constraint_reader" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;fnc_constraint_reader.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="75" tag="operation_75" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        fnc_constraint_reader.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:46:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="76" parent_class="76" fileExt=".cpp" fileName="md_control_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;md_control_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="77" tag="operation_77" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_control_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:06:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="87" parent_class="87" fileExt=".cpp" fileName="add_constraint" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        add_constraint.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="97" parent_class="97" fileExt=".cpp" fileName="mc_control_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mc_control_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="99" tag="operation_99" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mc_control_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:06:42&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="100" parent_class="100" fileExt=".cpp" fileName="phasespace_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        phasespace_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="104" parent_class="104" fileExt=".cpp" fileName="chi_squared" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        chi_squared.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="1129" parent_class="1129" fileExt=".cpp" fileName="function_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        function_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="2103" parent_class="2103" fileExt=".cpp" fileName="add_function" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        add_function.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="2506" parent_class="2506" fileExt=".cpp" fileName="cutoff_constraint_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        cutoff_constraint_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="3143" parent_class="3143" fileExt=".cpp" fileName="histogram_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        histogram_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="3149" parent_class="3149" fileExt=".cpp" fileName="rdf_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        rdf_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="3155" parent_class="3155" fileExt=".cpp" fileName="rdf_fom_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;rdf_fom_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="3668" tag="operation_3668" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        rdf_fom_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:33:57&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="3864" parent_class="3864" fileExt=".cpp" fileName="add_fom" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        add_fom.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="5341" parent_class="5341" fileExt=".cpp" fileName="mdmc_control_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mdmc_control_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5363" tag="operation_5363" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mdmc_control_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:07:46&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="6175" parent_class="6175" fileExt=".cpp" fileName="func_param_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        func_param_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="7481" parent_class="7481" fileExt=".cpp" fileName="structure_nn_methods" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_nn_methods.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="9100" parent_class="9100" fileExt=".cpp" fileName="md_property_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_property_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="15556" id="578" parent_class="578" fileExt=".cpp" fileName="lennard_jones_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;lennard_jones_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="750" tag="operation_750" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14246" tag="operation_14246" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="13541" tag="operation_13541" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="34185" tag="operation_34185" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        lennard_jones_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:33:51&amp;#010;The original location of this file is new_package&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="17314" parent_class="17314" fileExt=".cpp" fileName="handler_structure_part_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;handler_structure_part_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="17527" tag="operation_17527" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="46742" tag="operation_46742" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="46809" tag="operation_46809" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="46831" tag="operation_46831" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="46875" tag="operation_46875" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="46919" tag="operation_46919" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        handler_structure_part_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:56:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="25003" parent_class="25003" fileExt=".cpp" fileName="func_params_wrapper_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        func_params_wrapper_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="29550" parent_class="29550" fileExt=".cpp" fileName="structure_type_definitions" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_type_definitions.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="42422" parent_class="42422" fileExt=".cpp" fileName="time_correlation_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        time_correlation_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="47468" parent_class="47468" fileExt=".cpp" fileName="g_d_readers" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;g_d_readers.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="47553" tag="operation_47553" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        g_d_readers.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:00:59&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="48714" parent_class="48714" fileExt=".cpp" fileName="md_control_time_corr_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;md_control_time_corr_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="48864" tag="operation_48864" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_control_time_corr_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:10:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="48736" parent_class="48736" fileExt=".cpp" fileName="mdmc_control_time_corr_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mdmc_control_time_corr_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="48907" tag="operation_48907" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mdmc_control_time_corr_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:10:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="48758" parent_class="48758" fileExt=".cpp" fileName="md_gridsearch_control_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;md_gridsearch_control_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="48950" tag="operation_48950" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_gridsearch_control_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:10:06&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader41996" parent_class="41996" fileExt=".h" fileName="list" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        list.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader34562" parent_class="34562" fileExt=".h" fileName="histrogram" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        histrogram.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader23" parent_class="23" fileExt=".h" fileName="structure_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader30" parent_class="30" fileExt=".h" fileName="fnc_constraint_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        fnc_constraint_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader34" parent_class="34" fileExt=".h" fileName="configuration_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        configuration_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="980" field_type="1" initialValue="" role_id="0" writeOutMethods="false" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" configuration_class ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="89" field_type="4" initialValue="" role_id="1" writeOutMethods="false" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" configuration_class ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader57" parent_class="57" fileExt=".h" fileName="common_block_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef COMMON_BLOCK_CLASS_H&amp;#010;#define COMMON_BLOCK_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;func_params_wrapper_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //COMMON_BLOCK_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        common_block_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:04:42&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="58" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="58" tag="tblock_0" canDelete="false" indentLevel="1" text=" configuration common_config;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="58" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="58" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="58" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="58" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="60" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="60" tag="tblock_3" canDelete="false" indentLevel="1" text=" fnc_constraint target_fnc_constr;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="60" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="60" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="60" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="60" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2910" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2910" tag="tblock_4" canDelete="false" indentLevel="1" text=" cutoff_constraint target_cutoff_constr;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2910" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="2910" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2910" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="2910" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16299" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16299" tag="tblock_1" canDelete="false" indentLevel="1" text=" func_list common_pe_list;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16299" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="16299" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16299" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16299" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16315" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16315" tag="tblock_2" canDelete="false" indentLevel="1" text=" func_list common_fom_list;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16315" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16315" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16315" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="16315" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16331" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16331" tag="tblock_5" canDelete="false" indentLevel="1" text=" lj_pe_container target_lj_pe;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16331" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="16331" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16331" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="16331" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16468" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16468" tag="tblock_6" canDelete="false" indentLevel="1" text=" rdf_fom_container target_rdf_fom;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16468" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="16468" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16468" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="16468" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader61" parent_class="61" fileExt=".h" fileName="handler_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef HANDLER_CLASS_H&amp;#010;#define HANDLER_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //HANDLER_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        handler_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:46:30&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader62" parent_class="62" fileExt=".h" fileName="mdmc" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MDMC_H&amp;#010;#define MDMC_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MDMC_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mdmc.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:45:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader65" parent_class="65" fileExt=".h" fileName="structure_reader_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STRUCTURE_READER_CLASS_H&amp;#010;#define STRUCTURE_READER_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STRUCTURE_READER_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_reader_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:01:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader74" parent_class="74" fileExt=".h" fileName="fnc_constraint_reader" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FNC_CONSTRAINT_READER_H&amp;#010;#define FNC_CONSTRAINT_READER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FNC_CONSTRAINT_READER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        fnc_constraint_reader.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:46:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader76" parent_class="76" fileExt=".h" fileName="md_control_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MD_CONTROL_CLASS_H&amp;#010;#define MD_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MD_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_control_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:06:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader87" parent_class="87" fileExt=".h" fileName="add_constraint" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        add_constraint.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="980" field_type="1" initialValue="" role_id="1" writeOutMethods="false" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" add_constraint ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="89" field_type="4" initialValue="" role_id="0" writeOutMethods="false" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" add_constraint ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader97" parent_class="97" fileExt=".h" fileName="mc_control_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MC_CONTROL_CLASS_H&amp;#010;#define MC_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MC_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mc_control_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:06:42&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader100" parent_class="100" fileExt=".h" fileName="phasespace_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        phasespace_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader104" parent_class="104" fileExt=".h" fileName="chi_squared" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        chi_squared.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader1129" parent_class="1129" fileExt=".h" fileName="function_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        function_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader2103" parent_class="2103" fileExt=".h" fileName="add_function" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        add_function.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader2506" parent_class="2506" fileExt=".h" fileName="cutoff_constraint_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        cutoff_constraint_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader3143" parent_class="3143" fileExt=".h" fileName="histogram_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        histogram_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="26149" field_type="1" initialValue="" role_id="1" writeOutMethods="false" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" histogram_class ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader3149" parent_class="3149" fileExt=".h" fileName="rdf_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        rdf_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader3155" parent_class="3155" fileExt=".h" fileName="rdf_fom_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RDF_FOM_CLASS_H&amp;#010;#define RDF_FOM_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RDF_FOM_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        rdf_fom_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:33:57&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader3864" parent_class="3864" fileExt=".h" fileName="add_fom" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        add_fom.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader5341" parent_class="5341" fileExt=".h" fileName="mdmc_control_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MDMC_CONTROL_CLASS_H&amp;#010;#define MDMC_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MDMC_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mdmc_control_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:07:46&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader6175" parent_class="6175" fileExt=".h" fileName="func_param_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        func_param_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader7481" parent_class="7481" fileExt=".h" fileName="structure_nn_methods" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_nn_methods.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="26149" field_type="1" initialValue="" role_id="0" writeOutMethods="false" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" structure_nn_methods ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader9100" parent_class="9100" fileExt=".h" fileName="md_property_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_property_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="15556" id="cppheader578" parent_class="578" fileExt=".h" fileName="lennard_jones_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LENNARD_JONES_CLASS_H&amp;#010;#define LENNARD_JONES_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LENNARD_JONES_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        lennard_jones_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:33:51&amp;#010;The original location of this file is new_package&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader17314" parent_class="17314" fileExt=".h" fileName="handler_structure_part_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef HANDLER_STRUCTURE_PART_CLASS_H&amp;#010;#define HANDLER_STRUCTURE_PART_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //HANDLER_STRUCTURE_PART_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        handler_structure_part_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:56:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader25003" parent_class="25003" fileExt=".h" fileName="func_params_wrapper_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        func_params_wrapper_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader29550" parent_class="29550" fileExt=".h" fileName="structure_type_definitions" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_type_definitions.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader42422" parent_class="42422" fileExt=".h" fileName="time_correlation_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        time_correlation_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader47468" parent_class="47468" fileExt=".h" fileName="g_d_readers" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef G_D_READERS_H&amp;#010;#define G_D_READERS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //G_D_READERS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        g_d_readers.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:00:59&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader48714" parent_class="48714" fileExt=".h" fileName="md_control_time_corr_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MD_CONTROL_TIME_CORR_CLASS_H&amp;#010;#define MD_CONTROL_TIME_CORR_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MD_CONTROL_TIME_CORR_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_control_time_corr_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:10:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader48736" parent_class="48736" fileExt=".h" fileName="mdmc_control_time_corr_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MDMC_CONTROL_TIME_CORR_CLASS_H&amp;#010;#define MDMC_CONTROL_TIME_CORR_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MDMC_CONTROL_TIME_CORR_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mdmc_control_time_corr_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:10:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader48758" parent_class="48758" fileExt=".h" fileName="md_gridsearch_control_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MD_GRIDSEARCH_CONTROL_CLASS_H&amp;#010;#define MD_GRIDSEARCH_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MD_GRIDSEARCH_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_gridsearch_control_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:10:06&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
