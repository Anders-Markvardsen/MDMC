<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2008-06-09T21:12:03" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.5.3</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isLeaf="false" isRoot="false" xmi.id="m1" isAbstract="false" name="UML Model" >
   <UML:Namespace.ownedElement>
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="125" isRoot="false" isAbstract="false" name="datatype" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="141" isRoot="false" isAbstract="false" name="module" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="151" isRoot="false" isAbstract="false" name="program" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="157" isRoot="false" isAbstract="false" name="interface" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16253" isRoot="false" isAbstract="false" name="optional" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="44222" isRoot="false" isAbstract="false" name="constructor" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="44223" isRoot="false" isAbstract="false" name="friend" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="44224" isRoot="false" isAbstract="false" name="virtual" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="219" isRoot="false" isAbstract="false" name="void" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2" isRoot="false" isAbstract="false" name="int" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3" isRoot="false" isAbstract="false" name="char" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="4" isRoot="false" isAbstract="false" name="bool" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="5" isRoot="false" isAbstract="false" name="float" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6" isRoot="false" isAbstract="false" name="db" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7" isRoot="false" isAbstract="false" name="long" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="8" isRoot="false" isAbstract="false" name="short" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9" isRoot="false" isAbstract="false" name="string" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="15" isRoot="false" isAbstract="false" name="db(3)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16" isRoot="false" isAbstract="false" name="char(2)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="19" isRoot="false" isAbstract="false" name="atom(:)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="22" isRoot="false" isAbstract="false" name="char(120)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="32" isRoot="false" isAbstract="false" name="logical" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="68" isRoot="false" isAbstract="false" name="dictionary_t" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="91" isRoot="false" isAbstract="false" name="new_datatype" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="95" isRoot="false" isAbstract="false" name="int(:,:)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="1378" isRoot="false" isAbstract="false" name="atom" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="1460" isRoot="false" isAbstract="false" name="fnc_constraint" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="1525" isRoot="false" isAbstract="false" name="constraints" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="1577" isRoot="false" isAbstract="false" name="configuration" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="1882" isRoot="false" isAbstract="false" name="structure" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2197" isRoot="false" isAbstract="false" name="lj_pe_container" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2595" isRoot="false" isAbstract="false" name="cutoff_constraint" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3247" isRoot="false" isAbstract="false" name="histogram" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3637" isRoot="false" isAbstract="false" name="rdf" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3914" isRoot="false" isAbstract="false" name="fom_list" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6336" isRoot="false" isAbstract="false" name="func_param" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6395" isRoot="false" isAbstract="false" name="func_params" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6445" isRoot="false" isAbstract="false" name="char(20)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7295" isRoot="false" isAbstract="false" name="db(:,:)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7530" isRoot="false" isAbstract="false" name="near_neighb_list" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7874" isRoot="false" isAbstract="false" name="core_loop_md_extra" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="8643" isRoot="false" isAbstract="false" name="phasespace" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9185" isRoot="false" isAbstract="false" name="md_properties" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9927" isRoot="false" isAbstract="false" name="func_list" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="13237" isRoot="false" isAbstract="false" name="cell_list" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16437" isRoot="false" isAbstract="false" name="rdf_fom_container" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="16589" isRoot="false" isAbstract="false" name="int(ndim)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="28559" isRoot="false" isAbstract="false" name="xmlf_t" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="42763" isRoot="false" isAbstract="false" name="histogram_cutdown" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="52816" isRoot="false" isAbstract="false" name="time_corr_hist_container" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="55995" isRoot="false" isAbstract="false" name="buffer(:)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="57439" isRoot="false" isAbstract="false" name="s_q_time" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="57463" isRoot="false" isAbstract="false" name="s_q_omega" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="57605" isRoot="false" isAbstract="false" name="db(:)" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="59994" isRoot="false" isAbstract="false" name="s_q_omega_fom_container" />
    <UML:DataType stereotype="125" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="60598" isRoot="false" isAbstract="false" name="g_d_hist_fom_container" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="41996" isRoot="false" isAbstract="false" name="list" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="34562" isRoot="false" isAbstract="false" name="histrogram" />
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="23" isRoot="false" isAbstract="false" name="structure_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="25" isRoot="false" isAbstract="false" isQuery="false" name="swap_atoms" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="2" value="" type="2" name="num1" />
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="3" value="" type="2" name="num2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14810" isRoot="false" isAbstract="false" isQuery="false" name="apply_boundary_condition" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14825" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14854" isRoot="false" isAbstract="false" isQuery="false" name="copy_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72429" type="1882" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14855" value="" type="1882" name="s_in" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41141" isRoot="false" isAbstract="false" isQuery="false" name="shallow_copy_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41142" value="" type="1882" name="s_in" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="41158" value="" type="1882" name="s_out" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16114" isRoot="false" isAbstract="false" isQuery="false" name="save_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16115" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16131" value="" type="3" name="filename" />
        <UML:Parameter stereotype="16253" isSpecification="false" visibility="private" xmi.id="16147" value="" type="6" name="temperature(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="30" isRoot="false" isAbstract="false" name="fnc_constraint_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="33" isRoot="false" isAbstract="false" isQuery="false" name="validate_fnc_constraint" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72430" type="32" />
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4379" value="" type="1460" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="34" isRoot="false" isAbstract="false" name="configuration_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="35" isRoot="false" isAbstract="false" isQuery="false" name="is_valid_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72431" type="32" />
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="1577" name="c" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="57" isRoot="false" isAbstract="false" name="common_block_class" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="public" xmi.id="58" type="1577" name="common_config" />
      <UML:Attribute isSpecification="false" visibility="protected" xmi.id="60" type="1460" name="target_fnc_constr" />
      <UML:Attribute isSpecification="false" visibility="protected" xmi.id="2910" type="2595" name="target_cutoff_constr" />
      <UML:Attribute isSpecification="false" visibility="public" xmi.id="16299" type="9927" name="common_pe_list" />
      <UML:Attribute isSpecification="false" visibility="public" xmi.id="16315" type="9927" name="common_fom_list" />
      <UML:Attribute isSpecification="false" visibility="protected" xmi.id="16331" type="2197" name="target_lj_pe" />
      <UML:Attribute isSpecification="false" visibility="protected" xmi.id="16468" type="16437" name="target_rdf_fom" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="61" isRoot="false" isAbstract="false" name="handler_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17375" isRoot="false" isAbstract="false" isQuery="false" name="startup_handler" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17376" value="" type="3" name="filename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="67" isRoot="false" isAbstract="false" isQuery="false" name="begin_element" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="2" value="" type="68" name="attributes" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="70" isRoot="false" isAbstract="false" isQuery="false" name="start_document" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="71" isRoot="false" isAbstract="false" isQuery="false" name="pcdata_chunk" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="3" name="chunk" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="72" isRoot="false" isAbstract="false" isQuery="false" name="end_element" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="3" name="name" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="73" isRoot="false" isAbstract="false" isQuery="false" name="end_document" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="151" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="62" isRoot="false" isAbstract="false" name="mdmc" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="64" isRoot="false" isAbstract="false" isQuery="false" name="mdmc" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="3" name="filename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="65" isRoot="false" isAbstract="false" name="structure_reader_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="66" isRoot="false" isAbstract="false" isQuery="false" name="make_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="3" name="filename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="9401" isRoot="false" isAbstract="false" isQuery="false" name="make_simple_cubic_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9402" value="" type="6" name="density" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9411" value="" type="16589" name="n_atoms" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16650" isRoot="false" isAbstract="false" isQuery="false" name="make_fcc_structure" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16651" value="" type="6" name="density" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="16667" value="" type="16589" name="n_atoms" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="74" isRoot="false" isAbstract="false" name="fnc_constraint_reader" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="75" isRoot="false" isAbstract="false" isQuery="false" name="make_fnc_constraint" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="3" name="filename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="76" isRoot="false" isAbstract="false" name="md_control_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="77" isRoot="false" isAbstract="false" isQuery="false" name="run_md_control" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="157" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="87" isRoot="false" isAbstract="false" name="add_constraint" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="88" isRoot="false" isAbstract="false" isQuery="false" name="add_fnc_constraint" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="1" value="" type="1577" name="c" />
        <UML:Parameter isSpecification="false" visibility="public" xmi.id="2" value="" type="1460" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="2532" isRoot="false" isAbstract="false" isQuery="false" name="add_cutoff_constraint" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="2533" value="" type="1577" name="c" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="2606" value="" type="2595" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="97" isRoot="false" isAbstract="false" name="mc_control_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="99" isRoot="false" isAbstract="false" isQuery="false" name="run_mc_control" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="100" isRoot="false" isAbstract="false" name="phasespace_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14915" isRoot="false" isAbstract="false" isQuery="false" name="trajectory_in_phasespace" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14916" value="" type="8643" name="ps" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="20545" value="" type="9927" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14947" value="" type="2" name="Nmd" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14963" value="" type="6" name="del_t" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14979" value="" type="6" name="press_comp(o)" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14995" value="" type="6" name="epot(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="12577" isRoot="false" isAbstract="false" isQuery="false" name="make_phasespace" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72432" type="8643" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="12578" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="12608" value="" type="6" name="temperature" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41480" isRoot="false" isAbstract="false" isQuery="false" name="copy_phasespace" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72433" type="8643" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41481" value="" type="8643" name="ps_in" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41513" isRoot="false" isAbstract="false" isQuery="false" name="shallow_copy_phasespace" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41514" value="" type="8643" name="ps_in" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="41531" value="" type="8643" name="ps_out" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="104" isRoot="false" isAbstract="false" name="chi_squared" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="1129" isRoot="false" isAbstract="false" name="function_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="1983" isRoot="false" isAbstract="false" isQuery="false" name="func_val" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72434" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1987" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="7775" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="14408" isRoot="false" isAbstract="false" isQuery="false" name="func_deriv" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14409" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14424" value="" type="7295" name="deriv" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14439" value="" type="9927" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14454" value="" type="6" name="press_comp(o)" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14469" value="" type="6" name="epot(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="33987" isRoot="false" isAbstract="false" isQuery="false" name="func_accum_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="33988" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="34005" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="34054" isRoot="false" isAbstract="false" isQuery="false" name="func_clear_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="34055" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="34072" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Interface stereotype="157" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2103" isRoot="false" isAbstract="true" name="add_function" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="2137" isRoot="false" isAbstract="false" isQuery="false" name="add_lj_pe_container" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="2183" value="" type="9927" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="2188" value="" type="2197" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="19902" isRoot="false" isAbstract="false" isQuery="false" name="add_rdf_fom_container" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="19919" value="" type="9927" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="19936" value="" type="16437" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Interface>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2506" isRoot="false" isAbstract="false" name="cutoff_constraint_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="2511" isRoot="false" isAbstract="false" isQuery="false" name="validate_cutoff_constraint" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72435" type="32" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="2512" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4429" value="" type="2595" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3143" isRoot="false" isAbstract="false" name="histogram_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="3218" isRoot="false" isAbstract="false" isQuery="false" name="cal_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="3219" value="" type="3247" name="h" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="3385" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="3230" isRoot="false" isAbstract="false" isQuery="false" name="make_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="3231" value="" type="6" name="r_max" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="3396" value="" type="6" name="bin_length" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="18363" isRoot="false" isAbstract="false" isQuery="false" name="copy_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72436" type="3247" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18364" value="" type="3247" name="h_in" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41312" isRoot="false" isAbstract="false" isQuery="false" name="shallow_copy_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41313" value="" type="3247" name="h_in" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="41329" value="" type="3247" name="h_out" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="33697" isRoot="false" isAbstract="false" isQuery="false" name="accum_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="33698" value="" type="34562" name="h" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="33717" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="33754" isRoot="false" isAbstract="false" isQuery="false" name="clear_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="33755" value="" type="3247" name="h" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3149" isRoot="false" isAbstract="false" name="rdf_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="3618" isRoot="false" isAbstract="false" isQuery="false" name="make_rdf" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72437" type="3637" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4686" value="" type="6" name="volume" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4694" value="" type="2" name="n_atoms" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4702" value="" type="6" name="r_max" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18668" value="" type="6" name="bin_length" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="18719" isRoot="false" isAbstract="false" isQuery="false" name="save_rdf" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18720" value="" type="3637" name="r" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18738" value="" type="6" name="temperature(o)" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18756" value="" type="6" name="density(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="18808" isRoot="false" isAbstract="false" isQuery="false" name="cal_rdf" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18809" value="" type="3637" name="r" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="18827" value="" type="3247" name="h" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3155" isRoot="false" isAbstract="false" name="rdf_fom_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="3668" isRoot="false" isAbstract="false" isQuery="false" name="rdf_fom_val" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72438" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="3669" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="4573" value="" type="16437" name="c" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Interface stereotype="157" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3864" isRoot="false" isAbstract="true" name="add_fom" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="4036" isRoot="false" isAbstract="false" isQuery="false" name="add_pdf_fom" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4065" value="" type="3914" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="4073" value="" type="4021" name="t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Interface>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="5341" isRoot="false" isAbstract="false" name="mdmc_control_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5363" isRoot="false" isAbstract="false" isQuery="false" name="run_mdmc_control" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6175" isRoot="false" isAbstract="false" name="func_param_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="6311" isRoot="false" isAbstract="false" isQuery="false" name="get_func_param_val" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72439" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="6370" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="6428" value="" type="3" name="name" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="6526" isRoot="false" isAbstract="false" isQuery="false" name="set_func_param_val" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="6527" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="6536" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="6545" value="" type="6" name="val" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="21122" isRoot="false" isAbstract="false" isQuery="false" name="add_func_param" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21123" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21140" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21173" value="" type="6" name="val" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="21206" isRoot="false" isAbstract="false" isQuery="false" name="does_func_param_exist" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72440" type="4" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21207" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21224" value="" type="3" name="name" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28471" isRoot="false" isAbstract="false" isQuery="false" name="write_func_param_to_file" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28506" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28524" value="" type="28559" name="xf" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28594" isRoot="false" isAbstract="false" isQuery="false" name="random_move_func_params" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28595" value="" type="6395" name="p" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28630" isRoot="false" isAbstract="false" isQuery="false" name="set_func_param_min" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28631" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28649" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28667" value="" type="6" name="min" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28702" isRoot="false" isAbstract="false" isQuery="false" name="set_func_param_max" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28720" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28738" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28756" value="" type="6" name="max" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28791" isRoot="false" isAbstract="false" isQuery="false" name="set_func_param_fixed" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28792" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28810" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28828" value="" type="4" name="fixed" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28863" isRoot="false" isAbstract="false" isQuery="false" name="set_func_param_max_move" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28864" value="" type="6395" name="p" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28882" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28900" value="" type="6" name="max_move" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41234" isRoot="false" isAbstract="false" isQuery="false" name="xml_add_attribute_func_params" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="41235" value="" type="28559" name="xf" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41251" value="" type="6395" name="p" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7481" isRoot="false" isAbstract="false" name="structure_nn_methods" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="13109" isRoot="false" isAbstract="false" isQuery="false" name="build_near_neighb" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13110" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="12918" isRoot="false" isAbstract="false" isQuery="false" name="make_near_neighb_list" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="12919" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="12930" value="" type="6" name="r_cut" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="12941" value="" type="6" name="delta_r" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="9042" isRoot="false" isAbstract="false" isQuery="false" name="update_nn_list_flags" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9043" value="" type="6" name="max_an_atom_has_moved, nn_list" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="42014" isRoot="false" isAbstract="false" isQuery="false" name="copy_near_neighb_list" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72441" type="7530" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42015" value="" type="7530" name="nn_in" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="42049" isRoot="false" isAbstract="false" isQuery="false" name="shallow_copy_near_neighb_list" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42050" value="" type="7530" name="nn_in" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="42068" value="" type="7530" name="nn_out" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="14709" isRoot="false" isAbstract="false" isQuery="false" name="cal_nn_distances" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14710" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="7555" isRoot="false" isAbstract="false" isQuery="false" name="build_near_neighb_with_cell" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="7556" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="13062" isRoot="false" isAbstract="false" isQuery="false" name="build_near_neighb_without_cell" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13063" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="13167" isRoot="false" isAbstract="false" isQuery="false" name="get_num_near_neighb" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13168" value="" type="13237" name="c" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13180" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13192" value="" type="2" name="r_cut_neighbour" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="13319" isRoot="false" isAbstract="false" isQuery="false" name="get_num_near_neighb_with_cell" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72442" type="2" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13320" value="" type="13237" name="c" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13333" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13346" value="" type="6" name="r_cut_neighbour" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="13282" isRoot="false" isAbstract="false" isQuery="false" name="get_num_near_neighb_without_cell" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72443" type="2" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13283" value="" type="1882" name="s" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="13295" value="" type="6" name="r_cut_neighbour" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="42120" isRoot="false" isAbstract="false" isQuery="false" name="copy_cell_list" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72444" type="13237" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42121" value="" type="13237" name="l_in" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="42175" isRoot="false" isAbstract="false" isQuery="false" name="shallow_copy_cell_list" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42176" value="" type="13237" name="l_in" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="42195" value="" type="13237" name="l_out" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9100" isRoot="false" isAbstract="false" name="md_property_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9133" isRoot="false" isAbstract="false" isQuery="false" name="md_cal_properties" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9134" value="" type="8643" name="ps" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9152" value="" type="9185" name="props" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="15236" value="" type="9927" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21666" value="" type="6" name="press_comp(o)" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21684" value="" type="6" name="epot(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9210" isRoot="false" isAbstract="false" isQuery="false" name="md_accum_properties" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9211" value="" type="9185" name="props" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9228" isRoot="false" isAbstract="false" isQuery="false" name="md_reset_properties" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9237" value="" type="9185" name="props" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="9254" isRoot="false" isAbstract="false" isQuery="false" name="md_print_properties" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="9255" value="" type="9185" name="props" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="21719" isRoot="false" isAbstract="false" isQuery="false" name="md_cal_properties_not_extra" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21720" value="" type="8643" name="ps" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21738" value="" type="9185" name="props" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21773" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="21791" isRoot="false" isAbstract="false" isQuery="false" name="md_cal_properties_extra" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21792" value="" type="8643" name="ps" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21810" value="" type="9185" name="props" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21828" value="" type="9927" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21863" value="" type="6" name="press_comp" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="21881" value="" type="6" name="epot" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="15556" isRoot="false" isAbstract="false" name="new_package" >
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="15556" xmi.id="578" isRoot="false" isAbstract="false" name="lennard_jones_class" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="750" isRoot="false" isAbstract="false" isQuery="false" name="lj_val" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="72445" type="6" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="751" value="" type="1882" name="s" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="4480" value="" type="2197" name="c" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="14246" isRoot="false" isAbstract="false" isQuery="false" name="lj_deriv" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="14247" value="" type="1882" name="s" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="14262" value="" type="7295" name="deriv" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="14291" value="" type="2197" name="c" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="14306" value="" type="6" name="press_comp(o)" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="14321" value="" type="6" name="epot(o)" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="13541" isRoot="false" isAbstract="false" isQuery="false" name="lj_val_nn" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="72446" type="6" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="13542" value="" type="1882" name="s" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="13556" value="" type="2197" name="c" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="34185" isRoot="false" isAbstract="false" isQuery="false" name="lj_val_without_nn" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="34186" value="" type="1882" name="s" />
          <UML:Parameter isSpecification="false" visibility="private" xmi.id="34203" value="" type="2197" name="c" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
     </UML:Namespace.ownedElement>
    </UML:Package>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="17314" isRoot="false" isAbstract="false" name="handler_structure_part_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17527" isRoot="false" isAbstract="false" isQuery="false" name="handler_structure_part" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="17543" value="" type="3" name="filename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="46742" isRoot="false" isAbstract="false" isQuery="false" name="begin_element" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="46743" value="" type="3" name="name" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="46787" value="" type="68" name="attributes" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="46809" isRoot="false" isAbstract="false" isQuery="false" name="start_document" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="46831" isRoot="false" isAbstract="false" isQuery="false" name="pcdata_chunk" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="46832" value="" type="3" name="chunk" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="46875" isRoot="false" isAbstract="false" isQuery="false" name="end_element" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="46897" value="" type="3" name="name" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="46919" isRoot="false" isAbstract="false" isQuery="false" name="end_document" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="23387" isRoot="false" isAbstract="false" name="functions" >
     <UML:Namespace.ownedElement/>
    </UML:Package>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="25003" isRoot="false" isAbstract="false" name="func_params_wrapper_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="28190" isRoot="false" isAbstract="false" isQuery="false" name="move_random_func_params" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="28191" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41644" isRoot="false" isAbstract="false" isQuery="false" name="add_xml_attribute_func_params" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="41645" value="" type="28559" name="xf" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41662" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41743" isRoot="false" isAbstract="false" isQuery="false" name="backup_func_params" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="41744" value="" type="9927" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41777" isRoot="false" isAbstract="false" isQuery="false" name="restore_func_params" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="41778" value="" type="41996" name="l" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="27425" isRoot="false" isAbstract="false" name="algorithms" >
     <UML:Namespace.ownedElement/>
    </UML:Package>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="27443" isRoot="false" isAbstract="false" name="handlers" >
     <UML:Namespace.ownedElement/>
    </UML:Package>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="27620" isRoot="false" isAbstract="false" name="all_constraints" >
     <UML:Namespace.ownedElement/>
    </UML:Package>
    <UML:Class stereotype="141" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="29550" isRoot="false" isAbstract="false" name="structure_type_definitions" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="33460" isRoot="false" isAbstract="false" isQuery="false" name="apply_boundary_condition_to_vector" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="33515" value="" type="15" name="vec" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="33534" value="" type="15" name="box_edges" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="62451" isRoot="false" isAbstract="false" isQuery="false" name="apply_boundary_condition_to_vector_expensive" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="62452" value="" type="15" name="vec" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="62479" value="" type="15" name="box_edges" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="42422" isRoot="false" isAbstract="false" name="time_corr_algorithm" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="55759" type="2" name="n_buffer_average_over" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="55806" type="2" name="n_time_buffers" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="56042" type="55995" name="bufs" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="56158" type="2" name="num_buffs_cal_thus_far" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55179" isRoot="false" isAbstract="false" isQuery="false" name="cal_time_corr_container" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="55180" value="" type="52816" name="c" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="55204" value="" type="8643" name="ps" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="64076" value="" type="9927" name="l" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="64103" value="" type="6" name="n_delta_t" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="64130" value="" type="6" name="t_step" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="55107" isRoot="false" isAbstract="false" isQuery="false" name="set_n_buffer_average_over" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="55108" value="" type="2" name="n_buffer_average_over" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="64417" isRoot="false" isAbstract="false" isQuery="false" name="set_n_time_buffers " >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="64418" value="" type="2" name="n_time_buffers" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="42555" isRoot="false" isAbstract="false" isQuery="false" name="do_time_correlation" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72447" type="4" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42612" value="" type="52816" name="c" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42556" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="43028" isRoot="false" isAbstract="false" isQuery="false" name="update_act_r" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="43029" value="" type="7295" name="act_r" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43051" value="" type="1882" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="55389" isRoot="false" isAbstract="false" isQuery="false" name="allocate_buffers" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="55853" value="" type="2" name="n_time_evals" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="55877" value="" type="2" name="n_atom" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="55901" value="" type="6" name="r_max" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="55948" value="" type="6" name="bin_length" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="64523" isRoot="false" isAbstract="false" isQuery="false" name="reset_buffer" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="64524" value="" type="2" name="n_time_evals" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="44898" isRoot="false" isAbstract="false" name="readers" >
     <UML:Namespace.ownedElement/>
    </UML:Package>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="47468" isRoot="false" isAbstract="false" name="g_d_readers" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="47553" isRoot="false" isAbstract="false" isQuery="false" name="make_g_d_data_array" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="47554" value="" type="3" name="filename" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="48714" isRoot="false" isAbstract="false" name="md_control_time_corr_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="48864" isRoot="false" isAbstract="false" isQuery="false" name="run_md_control_time_corr" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="48736" isRoot="false" isAbstract="false" name="mdmc_control_time_corr_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="48907" isRoot="false" isAbstract="false" isQuery="false" name="run_mdmc_control_time_corr" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="48758" isRoot="false" isAbstract="false" name="md_gridsearch_control_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="48950" isRoot="false" isAbstract="false" isQuery="false" name="run_md_gridsearch_control" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="51492" isRoot="false" isAbstract="false" name="histogram_cutdown_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="51840" isRoot="false" isAbstract="false" isQuery="false" name="make_histogram_cutdown" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72448" type="42763" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42943" value="" type="6" name="r_max" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42964" value="" type="6" name="bin_length" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="52128" isRoot="false" isAbstract="false" isQuery="false" name="cal_g_s_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72449" type="6" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="42706" value="" type="42763" name="g_s_hist" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42802" value="" type="7295" name="org_r" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42822" value="" type="7295" name="act_r" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="52129" isRoot="false" isAbstract="false" isQuery="false" name="cal_g_d_histogram" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="42862" value="" type="42763" name="g_d_hist" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42882" value="" type="7295" name="org_r" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="42902" value="" type="7295" name="act_r" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="52572" isRoot="false" isAbstract="false" name="time_corr_hist_container_class" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="56297" initialValue="output/einstein_diffuse_exp" type="9" name="filename_prefix1" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="56321" initialValue="1" type="2" name="filename_number1" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="56345" initialValue="output/g_s" type="9" name="filename_prefix2" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="56369" initialValue="1" type="2" name="filename_number2" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="56393" initialValue="output/g_d" type="9" name="filename_prefix3" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="56417" initialValue="1" type="2" name="filename_number3" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="52727" isRoot="false" isAbstract="false" isQuery="false" name="make_time_corr_hist_container" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72450" type="52816" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="52861" value="" type="6" name="r_max" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="52884" value="" type="6" name="bin_length" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="52907" value="" type="2" name="n_time" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="52952" value="" type="6" name="delta_t" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="53459" isRoot="false" isAbstract="false" isQuery="false" name="print_g_d" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="54221" value="" type="52816" name="c" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43138" value="" type="6" name="volume" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43182" value="" type="2" name="n_atom" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43116" value="" type="6" name="temperature(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="53667" isRoot="false" isAbstract="false" isQuery="false" name="print_g_s" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="54452" value="" type="52816" name="c" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43269" value="" type="6" name="density" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43247" value="" type="6" name="temperature(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="53852" isRoot="false" isAbstract="false" isQuery="false" name="print_einstein_diffuse_exp" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="54669" value="" type="52816" name="c" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43379" value="" type="6" name="density(o)" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="43357" value="" type="6" name="temperature(o)" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="64940" isRoot="false" isAbstract="false" isQuery="false" name="clear_time_corr_hist_container" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="64941" value="" type="52816" name="c" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="64992" isRoot="false" isAbstract="false" isQuery="false" name="check_if_time_corr_hist_container_is_allocated" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="64993" value="" type="52816" name="c" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="65094" isRoot="false" isAbstract="false" isQuery="false" name="get_time_corr_hist_n_time_evals" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72451" type="2" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="65120" value="" type="52816" name="c" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="65198" isRoot="false" isAbstract="false" isQuery="false" name="get_time_corr_hist_bin_length" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72452" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="65199" value="" type="52816" name="c" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="65280" isRoot="false" isAbstract="false" isQuery="false" name="get_time_corr_hist_r_max" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72453" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="65281" value="" type="52816" name="c" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="57253" isRoot="false" isAbstract="false" name="s_q_time_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="57801" isRoot="false" isAbstract="false" isQuery="false" name="cal_s_q_time" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="57802" value="" type="52816" name="c" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="58629" value="" type="57439" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="58752" isRoot="false" isAbstract="false" isQuery="false" name="print_s_q_time" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="58753" value="" type="57439" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="57556" isRoot="false" isAbstract="false" isQuery="false" name="make_s_q_time" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72454" type="57439" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="57654" value="" type="57605" name="q" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="57679" value="" type="6" name="delta_time" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="57704" value="" type="2" name="n_time" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="57277" isRoot="false" isAbstract="false" name="s_q_omega_class" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="59377" type="57439" name="private_s_q_time" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="58898" isRoot="false" isAbstract="false" isQuery="false" name="cal_s_q_omega" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="58899" value="" type="52816" name="c" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="58924" value="" type="57463" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="59249" isRoot="false" isAbstract="false" isQuery="false" name="cal_s_q_omega" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="59250" value="" type="57439" name="s1" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="59276" value="" type="57463" name="s2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="58973" isRoot="false" isAbstract="false" isQuery="false" name="print_s_q_omega" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="58974" value="" type="57463" name="s" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="59023" isRoot="false" isAbstract="false" isQuery="false" name="make_s_q_omegas" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72455" type="57463" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="59024" value="" type="57605" name="q" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="59049" value="" type="57605" name="omega" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="59604" isRoot="false" isAbstract="false" name="s_q_omega_fom_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="59680" isRoot="false" isAbstract="false" isQuery="false" name="s_q_omega_fom_val" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="72456" type="6" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="59681" value="" type="52816" name="c" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="60047" value="" type="59994" name="c2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="60308" isRoot="false" isAbstract="false" name="g_d_hist_fom_class" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="60387" isRoot="false" isAbstract="false" isQuery="false" name="g_d_hist_fom_val" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="60388" value="" type="52816" name="c" />
        <UML:Parameter isSpecification="false" kind="inout" visibility="private" xmi.id="60493" value="" type="60598" name="c2" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="44" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="169" aggregation="none" type="30" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="170" aggregation="none" type="23" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="56" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="177" aggregation="none" type="34" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="178" aggregation="none" type="30" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="78" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="179" aggregation="none" type="57" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="180" aggregation="none" type="34" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="79" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="181" aggregation="none" type="65" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="182" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="80" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="183" aggregation="none" type="74" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="184" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="81" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="185" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="186" aggregation="none" type="65" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="82" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="187" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="188" aggregation="none" type="74" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="83" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="189" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="190" aggregation="none" type="76" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="84" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="191" aggregation="none" type="62" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="192" aggregation="none" type="61" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="89" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="193" aggregation="composite" type="87" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="194" aggregation="none" type="34" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="111" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="195" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="196" aggregation="none" type="97" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="112" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="197" aggregation="none" type="76" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="198" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="113" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="199" aggregation="none" type="97" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="200" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="114" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="201" aggregation="none" type="100" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="202" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="115" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="203" aggregation="none" type="76" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="204" aggregation="none" type="100" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="119" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="211" aggregation="none" type="104" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="212" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="980" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="981" aggregation="none" type="34" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="982" aggregation="none" type="87" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="1053" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="1054" aggregation="none" type="578" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1055" aggregation="none" type="23" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="1713" client="34" name="" supplier="87" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="2214" client="1129" name="" supplier="2103" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="2233" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="2234" aggregation="none" type="1129" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="2235" aggregation="none" type="578" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="2622" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="2623" aggregation="none" type="2506" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="2624" aggregation="none" type="23" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="2635" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="2636" aggregation="none" type="34" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="2637" aggregation="none" type="2506" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="4738" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="4739" aggregation="none" type="3149" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="4740" aggregation="none" type="3143" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="4755" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="4756" aggregation="none" type="3149" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="4757" aggregation="none" type="23" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="4772" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="4773" aggregation="none" type="3155" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="4774" aggregation="none" type="3149" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="5960" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="5961" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5962" aggregation="none" type="5341" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="5977" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="5978" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5979" aggregation="none" type="97" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="5994" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="5995" aggregation="none" type="76" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5996" aggregation="none" type="100" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="6011" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="6012" aggregation="none" type="76" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="6013" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="6028" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="6029" aggregation="none" type="5341" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="6030" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="6045" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="6046" aggregation="none" type="97" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="6047" aggregation="none" type="57" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="6941" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="6942" aggregation="none" type="578" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="6943" aggregation="none" type="6175" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="7086" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="7087" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="7088" aggregation="none" type="1129" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="7217" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="7218" aggregation="none" type="1129" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="7219" aggregation="none" type="578" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="7671" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="7672" aggregation="none" type="7481" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="7673" aggregation="none" type="23" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="7690" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="7691" aggregation="none" type="578" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="7692" aggregation="none" type="7481" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="8758" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="8759" aggregation="none" type="100" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="8760" aggregation="none" type="1129" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="8777" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="8778" aggregation="none" type="61" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="8779" aggregation="none" type="100" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="8966" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="8967" aggregation="none" type="5341" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="8968" aggregation="none" type="100" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="17664" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="17665" aggregation="none" type="62" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="17666" aggregation="none" type="17314" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="17847" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="17848" aggregation="none" type="17314" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="17849" aggregation="none" type="65" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="18105" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="18106" aggregation="none" type="3143" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="18107" aggregation="none" type="23" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="22409" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="22410" aggregation="none" type="9100" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="22411" aggregation="none" type="100" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="22497" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="22498" aggregation="none" type="57" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="22499" aggregation="none" type="9100" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="23473" client="23387" name="" supplier="23" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="23510" client="23387" name="" supplier="6175" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="23547" client="23387" name="" supplier="7481" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="24181" client="1129" name="" supplier="23387" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="25072" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="25073" aggregation="none" type="57" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="25074" aggregation="none" type="25003" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="26149" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="26150" aggregation="none" type="7481" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="26151" aggregation="none" type="3143" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="26203" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="26204" aggregation="none" type="7481" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="26205" aggregation="none" type="3143" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="26427" client="23387" name="" supplier="3149" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="27252" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="27253" aggregation="none" type="25003" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="27254" aggregation="none" type="1129" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="27546" client="27425" name="" supplier="57" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="27583" client="27443" name="" supplier="27425" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="27809" client="34" name="" supplier="27620" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="27846" client="27620" name="" supplier="23" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="31083" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="31084" aggregation="none" type="7481" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="31085" aggregation="none" type="29550" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="31118" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="31119" aggregation="none" type="23" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="31120" aggregation="none" type="7481" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="45046" client="62" name="" supplier="27443" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="45091" client="27443" name="" supplier="27425" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="45136" client="27443" name="" supplier="44898" />
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="45181" client="44898" name="" supplier="57" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="56602" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="56603" aggregation="none" type="52572" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="56604" aggregation="none" type="51492" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="57019" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="57020" aggregation="none" type="42422" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="57021" aggregation="none" type="52572" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="63391" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="63392" aggregation="none" type="42422" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="63393" aggregation="none" type="9100" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="63446" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="63447" aggregation="none" type="57" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="63448" aggregation="none" type="42422" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Dependency isSpecification="false" visibility="public" namespace="m1" xmi.id="63969" client="23387" name="" supplier="52572" />
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="32237" documentation="" uniqueid="72456" />
  <diagrams>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1880" snapy="10" showatts="1" xmi.id="32237" documentation="" type="405" showops="1" showpackage="0" name="nn logic in cal_histogram" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="988" >
    <widgets>
     <activitywidget usesdiagramfillcolour="1" width="10" activityname="" usesdiagramusefillcolour="1" x="568" y="116" linewidth="none" fillcolour="none" height="10" usefillcolor="1" isinstance="0" xmi.id="32274" documentation="" activitytype="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="161" activityname="ignore_list = .false." usesdiagramusefillcolour="1" x="514" y="152" linewidth="none" fillcolour="none" height="33" usefillcolor="1" isinstance="0" xmi.id="32293" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="0" width="219" activityname="is r_cut_nn > r_cut_data ?" usesdiagramusefillcolour="0" x="493" y="228" linewidth="none" fillcolour="#ffffc0" height="33" usefillcolor="1" isinstance="0" xmi.id="32330" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="184" activityname="do not use nn method" usesdiagramusefillcolour="0" x="320" y="275" linewidth="none" fillcolour="#ffffc0" height="33" usefillcolor="1" isinstance="0" xmi.id="32349" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="1" width="130" activityname="use nn-method" usesdiagramusefillcolour="1" x="707" y="275" linewidth="none" fillcolour="none" height="33" usefillcolor="1" isinstance="0" xmi.id="32368" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="20" activityname="" usesdiagramusefillcolour="1" x="564" y="278" linewidth="none" fillcolour="none" height="20" usefillcolor="1" isinstance="0" xmi.id="32621" documentation="" activitytype="3" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="32293" widgetaid="32274" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="573" starty="126" />
       <endpoint endx="594" endy="152" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="32330" widgetaid="32293" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="594" starty="185" />
       <endpoint endx="602" endy="228" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="32621" widgetaid="32330" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="602" starty="261" />
       <endpoint endx="574" endy="278" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="32349" widgetaid="32621" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="564" starty="288" />
       <endpoint endx="504" endy="291" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="28" usesdiagramusefillcolour="1" x="510" y="288" linewidth="none" posttext="" role="703" fillcolour="none" height="27" usefillcolor="1" pretext="" isinstance="0" xmi.id="67016" text="no" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="32368" widgetaid="32621" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="584" starty="288" />
       <endpoint endx="707" endy="291" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="36" usesdiagramusefillcolour="1" x="645" y="288" linewidth="none" posttext="" role="703" fillcolour="none" height="27" usefillcolor="1" pretext="" isinstance="0" xmi.id="67017" text="yes" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1865" snapy="10" showatts="1" xmi.id="34777" documentation="" type="405" showops="1" showpackage="0" name="mdmc_control" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1065" >
    <widgets>
     <activitywidget usesdiagramfillcolour="1" width="10" activityname="" usesdiagramusefillcolour="1" x="620" y="12" linewidth="none" fillcolour="none" height="10" usefillcolor="1" isinstance="0" xmi.id="34808" documentation="" activitytype="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="0" width="217" activityname="initial MD equilibration run" usesdiagramusefillcolour="0" x="546" y="119" linewidth="none" fillcolour="#ffffc0" height="33" usefillcolor="1" isinstance="0" xmi.id="34824" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="278" activityname="Has MD run reached equilibrium?" usesdiagramusefillcolour="0" x="524" y="207" linewidth="none" fillcolour="#ffffc0" height="33" usefillcolor="1" isinstance="0" xmi.id="34885" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="127" activityname="Calculate RDF" usesdiagramusefillcolour="0" x="475" y="363" linewidth="none" fillcolour="#ffffc0" height="33" usefillcolor="1" isinstance="0" xmi.id="34946" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="126" activityname="calculate FOM" usesdiagramusefillcolour="0" x="475" y="409" linewidth="none" fillcolour="#ffffc0" height="33" usefillcolor="1" isinstance="0" xmi.id="34992" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="92" activityname="save state" usesdiagramusefillcolour="0" x="487" y="456" linewidth="none" fillcolour="#ffffc0" height="33" usefillcolor="1" isinstance="0" xmi.id="35038" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="360" usesdiagramusefillcolour="1" x="43" y="373" linewidth="none" fillcolour="none" height="103" usefillcolor="1" isinstance="0" xmi.id="35114" text="Code from mdmc_control.f90

    fom_old = fom_val
    call backup_func_params(common_pe_list)
    call shallow_copy_phasespace(my_ps, my_ps_old) " font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="0" width="247" activityname="repeated MD equilibration run" usesdiagramusefillcolour="0" x="433" y="596" linewidth="none" fillcolour="#ffffc0" height="33" usefillcolor="1" isinstance="0" xmi.id="35190" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="278" activityname="Has MD run reached equilibrium?" usesdiagramusefillcolour="0" x="421" y="689" linewidth="none" fillcolour="#ffffc0" height="33" usefillcolor="1" isinstance="0" xmi.id="35945" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="1" width="110" activityname="restore state" usesdiagramusefillcolour="1" x="298" y="685" linewidth="none" fillcolour="none" height="33" usefillcolor="1" isinstance="0" xmi.id="35976" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="0" width="221" activityname="Calculating RDF and FOM" usesdiagramusefillcolour="0" x="441" y="836" linewidth="none" fillcolour="#ffffc0" height="33" usefillcolor="1" isinstance="0" xmi.id="36067" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="93" activityname="Metropolis" usesdiagramusefillcolour="0" x="487" y="893" linewidth="none" fillcolour="#ffffc0" height="33" usefillcolor="1" isinstance="0" xmi.id="36159" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="0" width="263" activityname="Set start Epot parameter values" usesdiagramusefillcolour="0" x="528" y="46" linewidth="none" fillcolour="#ffffc0" height="33" usefillcolor="1" isinstance="0" xmi.id="36235" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <activitywidget usesdiagramfillcolour="1" width="10" activityname="" usesdiagramusefillcolour="1" x="325" y="308" linewidth="none" fillcolour="none" height="10" usefillcolor="1" isinstance="0" xmi.id="36416" documentation="" activitytype="2" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="20" activityname="" usesdiagramusefillcolour="1" x="512" y="302" linewidth="none" fillcolour="none" height="20" usefillcolor="1" isinstance="0" xmi.id="36462" documentation="" activitytype="3" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="20" activityname="" usesdiagramusefillcolour="1" x="512" y="771" linewidth="none" fillcolour="none" height="20" usefillcolor="1" isinstance="0" xmi.id="36692" documentation="" activitytype="3" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="20" activityname="" usesdiagramusefillcolour="1" x="512" y="968" linewidth="none" fillcolour="none" height="20" usefillcolor="1" isinstance="0" xmi.id="36814" documentation="" activitytype="3" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <notewidget usesdiagramfillcolour="1" width="474" usesdiagramusefillcolour="1" x="761" y="61" linewidth="none" fillcolour="none" height="142" usefillcolor="1" isinstance="0" xmi.id="36937" text="Input from mdmc_control.xml:

    &lt;total-steps-initial-equilibration number=&quot;15000&quot; average-over=&quot;1000&quot; />
    &lt;perform-initial-temperature-calibration>
      &lt;total-step-temp-cali number=&quot;8000&quot; />
      &lt;adjust-temp-at-interval number=&quot;200&quot; />
    &lt;/perform-initial-temperature-calibration>
" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="0" width="92" activityname="save state" usesdiagramusefillcolour="0" x="136" y="1024" linewidth="none" fillcolour="#ffffc0" height="33" usefillcolor="1" isinstance="0" xmi.id="37073" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" />
     <notewidget usesdiagramfillcolour="1" width="467" usesdiagramusefillcolour="1" x="19" y="150" linewidth="none" fillcolour="none" height="140" usefillcolor="1" isinstance="0" xmi.id="38414" text="When reached md-steps = total-step-temp-cali 
store Etot_end_of_temp_cali.

Then judge if equilibrium has been reached on whether:

  Is temperature at the end of the above MD run within T_target +- 50% ?
  Is Etot_end_of_MD_run within Etot_end_of_temp_cali +- 50% ?" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <notewidget usesdiagramfillcolour="1" width="347" usesdiagramusefillcolour="1" x="643" y="316" linewidth="none" fillcolour="none" height="121" usefillcolor="1" isinstance="0" xmi.id="38895" text="Input from mdmc_control.xml:

    &lt;calculate-rdf>
      &lt;cal-rdf-at-interval number=&quot;50&quot; />
      &lt;average-over-this-many-rdf number=&quot;20&quot; />  
    &lt;/calculate-rdf>" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <notewidget usesdiagramfillcolour="1" width="493" usesdiagramusefillcolour="1" x="672" y="540" linewidth="none" fillcolour="none" height="139" usefillcolor="1" isinstance="0" xmi.id="39721" text="Input from mdmc_control.xml:

    &lt;md-steps-repeated-equilibration number=&quot;10000&quot; average-over=&quot;1000&quot; />
    &lt;perform-repeated-temperature-calibration>
      &lt;total-step-temp-cali-repeated number=&quot;5000&quot; />
      &lt;adjust-temp-at-interval-repeated number=&quot;200&quot; />
    &lt;/perform-repeated-temperature-calibration>" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="259" activityname="Change Epot parameter values" usesdiagramusefillcolour="1" x="428" y="530" linewidth="none" fillcolour="none" height="33" usefillcolor="1" isinstance="0" xmi.id="40127" documentation="" activitytype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="20" activityname="" usesdiagramusefillcolour="1" x="329" y="533" linewidth="none" fillcolour="none" height="20" usefillcolor="1" isinstance="0" xmi.id="40503" documentation="" activitytype="3" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <activitywidget usesdiagramfillcolour="1" width="20" activityname="" usesdiagramusefillcolour="1" x="329" y="771" linewidth="none" fillcolour="none" height="20" usefillcolor="1" isinstance="0" xmi.id="40519" documentation="" activitytype="3" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <boxwidget usesdiagramfillcolour="1" width="1165" usesdiagramusefillcolour="1" x="38" y="511" linewidth="none" fillcolour="none" height="544" usefillcolor="1" isinstance="0" xmi.id="40914" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#000000" />
     <notewidget usesdiagramfillcolour="1" width="307" usesdiagramusefillcolour="1" x="828" y="845" linewidth="none" fillcolour="none" height="146" usefillcolor="1" isinstance="0" xmi.id="40975" text="Other input from mdmc_control.xml:

    &lt;mc-steps number=&quot;300&quot; /> 
    &lt;temperature-mc val=&quot;0.005&quot; /> 

    &lt;temperature units=&quot;Kelvin&quot; val=&quot;85.0&quot; />
    &lt;time-step units=&quot;10e-13s&quot; val=&quot;0.05&quot; />  " font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36235" widgetaid="34808" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="625" starty="22" />
       <endpoint endx="659" endy="46" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="34824" widgetaid="36235" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="659" starty="79" />
       <endpoint endx="654" endy="119" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36462" widgetaid="34885" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="663" starty="240" />
       <endpoint endx="532" endy="312" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="34946" widgetaid="36462" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="322" />
       <endpoint endx="538" endy="363" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="39" usesdiagramusefillcolour="1" x="532" y="330" linewidth="none" posttext="" role="703" fillcolour="none" height="27" usefillcolor="1" pretext="" isinstance="0" xmi.id="67018" text="Yes" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36416" widgetaid="36462" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="512" starty="312" />
       <endpoint endx="335" endy="313" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="31" usesdiagramusefillcolour="1" x="421" y="313" linewidth="none" posttext="" role="703" fillcolour="none" height="27" usefillcolor="1" pretext="" isinstance="0" xmi.id="67019" text="No" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="34992" widgetaid="34946" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="538" starty="396" />
       <endpoint endx="538" endy="409" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="35038" widgetaid="34992" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="538" starty="442" />
       <endpoint endx="533" endy="456" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36692" widgetaid="35945" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="560" starty="722" />
       <endpoint endx="522" endy="771" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36067" widgetaid="36692" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="791" />
       <endpoint endx="551" endy="836" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="39" usesdiagramusefillcolour="1" x="525" y="804" linewidth="none" posttext="" role="703" fillcolour="none" height="27" usefillcolor="1" pretext="" isinstance="0" xmi.id="67020" text="Yes" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36814" widgetaid="36159" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="533" starty="926" />
       <endpoint endx="522" endy="968" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="37073" widgetaid="36814" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="522" starty="988" />
       <endpoint endx="228" endy="1040" />
       <point x="522" y="1037" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="63" usesdiagramusefillcolour="1" x="422" y="1034" linewidth="none" posttext="" role="703" fillcolour="none" height="27" usefillcolor="1" pretext="" isinstance="0" xmi.id="67021" text="Accept" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="34885" widgetaid="34824" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="654" starty="152" />
       <endpoint endx="663" endy="207" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36937" widgetaid="34824" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="763" starty="135" />
       <endpoint endx="761" endy="132" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="34885" widgetaid="38414" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="486" starty="220" />
       <endpoint endx="524" endy="223" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="38895" widgetaid="34946" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="602" starty="379" />
       <endpoint endx="643" endy="376" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="35945" widgetaid="35190" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="556" starty="629" />
       <endpoint endx="560" endy="689" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="40127" widgetaid="35038" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="533" starty="489" />
       <endpoint endx="557" endy="530" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="35190" widgetaid="40127" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="557" starty="563" />
       <endpoint endx="556" endy="596" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="35038" widgetaid="35114" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="403" starty="424" />
       <endpoint endx="487" endy="472" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="40519" widgetaid="36692" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="512" starty="781" />
       <endpoint endx="349" endy="781" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="31" usesdiagramusefillcolour="1" x="430" y="781" linewidth="none" posttext="" role="703" fillcolour="none" height="27" usefillcolor="1" pretext="" isinstance="0" xmi.id="67022" text="No" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="40519" widgetaid="36814" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="512" starty="978" />
       <endpoint endx="339" endy="791" />
       <point x="339" y="978" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="59" usesdiagramusefillcolour="1" x="425" y="978" linewidth="none" posttext="" role="703" fillcolour="none" height="27" usefillcolor="1" pretext="" isinstance="0" xmi.id="67023" text="Reject" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="35976" widgetaid="40519" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="339" starty="771" />
       <endpoint endx="353" endy="718" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="40503" widgetaid="35976" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="353" starty="685" />
       <endpoint endx="339" endy="553" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="40127" widgetaid="40503" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="349" starty="543" />
       <endpoint endx="428" endy="546" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="40503" widgetaid="37073" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="182" starty="1024" />
       <endpoint endx="329" endy="543" />
       <point x="171" y="543" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="39721" widgetaid="35190" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="680" starty="612" />
       <endpoint endx="672" endy="609" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="36159" widgetaid="36067" roleBdoc="" documentation="" roleAdoc="" type="515" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="551" starty="869" />
       <endpoint endx="533" endy="893" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" label="Views" >
    <listitem open="1" type="801" label="Logical View" >
     <listitem open="1" type="813" id="87" >
      <listitem open="0" type="815" id="88" />
      <listitem open="0" type="815" id="2532" />
     </listitem>
     <listitem open="1" type="813" id="104" />
     <listitem open="0" type="813" id="57" >
      <listitem open="0" type="814" id="58" />
      <listitem open="0" type="814" id="60" />
      <listitem open="0" type="814" id="2910" />
      <listitem open="0" type="814" id="16299" />
      <listitem open="0" type="814" id="16315" />
      <listitem open="0" type="814" id="16331" />
      <listitem open="0" type="814" id="16468" />
     </listitem>
     <listitem open="0" type="813" id="34" >
      <listitem open="0" type="815" id="35" />
     </listitem>
     <listitem open="0" type="813" id="2506" >
      <listitem open="0" type="815" id="2511" />
     </listitem>
     <listitem open="0" type="813" id="30" >
      <listitem open="0" type="815" id="33" />
     </listitem>
     <listitem open="0" type="813" id="74" >
      <listitem open="0" type="815" id="75" />
     </listitem>
     <listitem open="1" type="813" id="6175" >
      <listitem open="0" type="815" id="6311" />
      <listitem open="0" type="815" id="6526" />
      <listitem open="0" type="815" id="21122" />
      <listitem open="0" type="815" id="21206" />
      <listitem open="0" type="815" id="28471" />
      <listitem open="0" type="815" id="28594" />
      <listitem open="0" type="815" id="28630" />
      <listitem open="0" type="815" id="28702" />
      <listitem open="0" type="815" id="28791" />
      <listitem open="0" type="815" id="28863" />
      <listitem open="0" type="815" id="41234" />
     </listitem>
     <listitem open="1" type="813" id="25003" >
      <listitem open="0" type="815" id="28190" />
      <listitem open="0" type="815" id="41644" />
      <listitem open="0" type="815" id="41743" />
      <listitem open="0" type="815" id="41777" />
     </listitem>
     <listitem open="1" type="813" id="1129" >
      <listitem open="0" type="815" id="1983" />
      <listitem open="0" type="815" id="14408" />
      <listitem open="0" type="815" id="33987" />
      <listitem open="0" type="815" id="34054" />
     </listitem>
     <listitem open="1" type="813" id="60308" >
      <listitem open="0" type="815" id="60387" />
     </listitem>
     <listitem open="1" type="813" id="47468" >
      <listitem open="0" type="815" id="47553" />
     </listitem>
     <listitem open="0" type="813" id="61" >
      <listitem open="0" type="815" id="17375" />
      <listitem open="0" type="815" id="67" />
      <listitem open="0" type="815" id="70" />
      <listitem open="0" type="815" id="71" />
      <listitem open="0" type="815" id="72" />
      <listitem open="0" type="815" id="73" />
     </listitem>
     <listitem open="1" type="813" id="17314" >
      <listitem open="0" type="815" id="17527" />
      <listitem open="0" type="815" id="46742" />
      <listitem open="0" type="815" id="46809" />
      <listitem open="0" type="815" id="46831" />
      <listitem open="0" type="815" id="46875" />
      <listitem open="0" type="815" id="46919" />
     </listitem>
     <listitem open="1" type="813" id="3143" >
      <listitem open="0" type="815" id="3218" />
      <listitem open="0" type="815" id="3230" />
      <listitem open="0" type="815" id="18363" />
      <listitem open="0" type="815" id="41312" />
      <listitem open="0" type="815" id="33697" />
      <listitem open="0" type="815" id="33754" />
     </listitem>
     <listitem open="1" type="813" id="51492" >
      <listitem open="0" type="815" id="51840" />
      <listitem open="0" type="815" id="52128" />
      <listitem open="0" type="815" id="52129" />
     </listitem>
     <listitem open="0" type="813" id="34562" />
     <listitem open="0" type="813" id="41996" />
     <listitem open="0" type="813" id="97" >
      <listitem open="0" type="815" id="99" />
     </listitem>
     <listitem open="0" type="813" id="76" >
      <listitem open="0" type="815" id="77" />
     </listitem>
     <listitem open="1" type="813" id="48714" >
      <listitem open="0" type="815" id="48864" />
     </listitem>
     <listitem open="1" type="813" id="48758" >
      <listitem open="0" type="815" id="48950" />
     </listitem>
     <listitem open="1" type="813" id="9100" >
      <listitem open="0" type="815" id="9133" />
      <listitem open="0" type="815" id="9210" />
      <listitem open="0" type="815" id="9228" />
      <listitem open="0" type="815" id="9254" />
      <listitem open="0" type="815" id="21719" />
      <listitem open="0" type="815" id="21791" />
     </listitem>
     <listitem open="0" type="813" id="62" >
      <listitem open="0" type="815" id="64" />
     </listitem>
     <listitem open="0" type="813" id="5341" >
      <listitem open="0" type="815" id="5363" />
     </listitem>
     <listitem open="1" type="813" id="48736" >
      <listitem open="0" type="815" id="48907" />
     </listitem>
     <listitem open="1" type="813" id="100" >
      <listitem open="0" type="815" id="14915" />
      <listitem open="0" type="815" id="12577" />
      <listitem open="0" type="815" id="41480" />
      <listitem open="0" type="815" id="41513" />
     </listitem>
     <listitem open="0" type="813" id="3149" >
      <listitem open="0" type="815" id="3618" />
      <listitem open="0" type="815" id="18719" />
      <listitem open="0" type="815" id="18808" />
     </listitem>
     <listitem open="1" type="813" id="3155" >
      <listitem open="0" type="815" id="3668" />
     </listitem>
     <listitem open="1" type="813" id="57277" >
      <listitem open="0" type="814" id="59377" />
      <listitem open="0" type="815" id="58898" />
      <listitem open="0" type="815" id="59249" />
      <listitem open="0" type="815" id="58973" />
      <listitem open="0" type="815" id="59023" />
     </listitem>
     <listitem open="1" type="813" id="59604" >
      <listitem open="0" type="815" id="59680" />
     </listitem>
     <listitem open="1" type="813" id="57253" >
      <listitem open="0" type="815" id="57801" />
      <listitem open="0" type="815" id="58752" />
      <listitem open="0" type="815" id="57556" />
     </listitem>
     <listitem open="1" type="813" id="23" >
      <listitem open="0" type="815" id="25" />
      <listitem open="0" type="815" id="14810" />
      <listitem open="0" type="815" id="14854" />
      <listitem open="0" type="815" id="41141" />
      <listitem open="0" type="815" id="16114" />
     </listitem>
     <listitem open="1" type="813" id="7481" >
      <listitem open="0" type="815" id="13109" />
      <listitem open="0" type="815" id="12918" />
      <listitem open="0" type="815" id="9042" />
      <listitem open="0" type="815" id="42014" />
      <listitem open="0" type="815" id="42049" />
      <listitem open="0" type="815" id="14709" />
      <listitem open="0" type="815" id="7555" />
      <listitem open="0" type="815" id="13062" />
      <listitem open="0" type="815" id="13167" />
      <listitem open="0" type="815" id="13319" />
      <listitem open="0" type="815" id="13282" />
      <listitem open="0" type="815" id="42120" />
      <listitem open="0" type="815" id="42175" />
     </listitem>
     <listitem open="0" type="813" id="65" >
      <listitem open="0" type="815" id="66" />
      <listitem open="0" type="815" id="9401" />
      <listitem open="0" type="815" id="16650" />
     </listitem>
     <listitem open="1" type="813" id="29550" >
      <listitem open="0" type="815" id="33460" />
      <listitem open="0" type="815" id="62451" />
     </listitem>
     <listitem open="1" type="813" id="42422" >
      <listitem open="0" type="814" id="55759" />
      <listitem open="0" type="814" id="55806" />
      <listitem open="0" type="814" id="56042" />
      <listitem open="0" type="814" id="56158" />
      <listitem open="0" type="815" id="55179" />
      <listitem open="0" type="815" id="55107" />
      <listitem open="0" type="815" id="64417" />
      <listitem open="0" type="815" id="42555" />
      <listitem open="0" type="815" id="43028" />
      <listitem open="0" type="815" id="55389" />
      <listitem open="0" type="815" id="64523" />
     </listitem>
     <listitem open="1" type="813" id="52572" >
      <listitem open="0" type="814" id="56297" />
      <listitem open="0" type="814" id="56321" />
      <listitem open="0" type="814" id="56345" />
      <listitem open="0" type="814" id="56369" />
      <listitem open="0" type="814" id="56393" />
      <listitem open="0" type="814" id="56417" />
      <listitem open="0" type="815" id="52727" />
      <listitem open="0" type="815" id="53459" />
      <listitem open="0" type="815" id="53667" />
      <listitem open="0" type="815" id="53852" />
      <listitem open="0" type="815" id="64940" />
      <listitem open="0" type="815" id="64992" />
      <listitem open="0" type="815" id="65094" />
      <listitem open="0" type="815" id="65198" />
      <listitem open="0" type="815" id="65280" />
     </listitem>
     <listitem open="0" type="817" id="3864" >
      <listitem open="0" type="815" id="4036" />
     </listitem>
     <listitem open="0" type="817" id="2103" >
      <listitem open="0" type="815" id="2137" />
      <listitem open="0" type="815" id="19902" />
     </listitem>
     <listitem open="1" type="818" id="27425" />
     <listitem open="1" type="818" id="27620" />
     <listitem open="1" type="818" id="23387" />
     <listitem open="1" type="818" id="27443" />
     <listitem open="1" type="818" id="15556" >
      <listitem open="1" type="813" id="578" >
       <listitem open="0" type="815" id="750" />
       <listitem open="0" type="815" id="14246" />
       <listitem open="0" type="815" id="13541" />
       <listitem open="0" type="815" id="34185" />
      </listitem>
     </listitem>
     <listitem open="1" type="818" id="44898" />
     <listitem open="1" type="830" label="Datatypes" >
      <listitem open="1" type="829" id="1378" />
      <listitem open="1" type="829" id="19" />
      <listitem open="1" type="829" id="4" />
      <listitem open="1" type="829" id="55995" />
      <listitem open="1" type="829" id="13237" />
      <listitem open="1" type="829" id="3" />
      <listitem open="1" type="829" id="22" />
      <listitem open="1" type="829" id="16" />
      <listitem open="1" type="829" id="6445" />
      <listitem open="1" type="829" id="1577" />
      <listitem open="1" type="829" id="1525" />
      <listitem open="1" type="829" id="7874" />
      <listitem open="1" type="829" id="2595" />
      <listitem open="1" type="829" id="6" />
      <listitem open="1" type="829" id="15" />
      <listitem open="1" type="829" id="57605" />
      <listitem open="1" type="829" id="7295" />
      <listitem open="1" type="829" id="68" />
      <listitem open="1" type="829" id="5" />
      <listitem open="1" type="829" id="1460" />
      <listitem open="1" type="829" id="3914" />
      <listitem open="1" type="829" id="9927" />
      <listitem open="1" type="829" id="6336" />
      <listitem open="1" type="829" id="6395" />
      <listitem open="1" type="829" id="60598" />
      <listitem open="1" type="829" id="3247" />
      <listitem open="1" type="829" id="42763" />
      <listitem open="1" type="829" id="2" />
      <listitem open="1" type="829" id="95" />
      <listitem open="1" type="829" id="16589" />
      <listitem open="1" type="829" id="2197" />
      <listitem open="1" type="829" id="32" />
      <listitem open="1" type="829" id="7" />
      <listitem open="1" type="829" id="9185" />
      <listitem open="1" type="829" id="7530" />
      <listitem open="1" type="829" id="91" />
      <listitem open="1" type="829" id="8643" />
      <listitem open="1" type="829" id="3637" />
      <listitem open="1" type="829" id="16437" />
      <listitem open="1" type="829" id="57463" />
      <listitem open="1" type="829" id="59994" />
      <listitem open="1" type="829" id="57439" />
      <listitem open="1" type="829" id="8" />
      <listitem open="1" type="829" id="9" />
      <listitem open="1" type="829" id="1882" />
      <listitem open="1" type="829" id="52816" />
      <listitem open="0" type="829" id="219" />
      <listitem open="1" type="829" id="28559" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" label="Use Case View" />
    <listitem open="1" type="821" label="Component View" />
    <listitem open="1" type="827" label="Deployment View" />
    <listitem open="1" type="836" label="Entity Relationship Model" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="C++" >
    <classifiercodedocument writeOutCode="true" package="-1" id="41996" parent_class="41996" fileExt=".cpp" fileName="list" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        list.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="34562" parent_class="34562" fileExt=".cpp" fileName="histrogram" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        histrogram.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="23" parent_class="23" fileExt=".cpp" fileName="structure_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="30" parent_class="30" fileExt=".cpp" fileName="fnc_constraint_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;fnc_constraint_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="33" tag="operation_33" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        fnc_constraint_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sun Jun 8 2008 at 13:57:10&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="34" parent_class="34" fileExt=".cpp" fileName="configuration_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        configuration_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="57" parent_class="57" fileExt=".cpp" fileName="common_block_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;common_block_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        common_block_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Mar 14 2007 at 12:50:42&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="61" parent_class="61" fileExt=".cpp" fileName="handler_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;handler_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="17375" tag="operation_17375" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="67" tag="operation_67" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="70" tag="operation_70" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="71" tag="operation_71" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="72" tag="operation_72" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="73" tag="operation_73" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        handler_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:46:30&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="62" parent_class="62" fileExt=".cpp" fileName="mdmc" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mdmc.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="64" tag="operation_64" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mdmc.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:45:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="65" parent_class="65" fileExt=".cpp" fileName="structure_reader_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;structure_reader_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="66" tag="operation_66" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="9401" tag="operation_9401" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16650" tag="operation_16650" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_reader_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:01:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="74" parent_class="74" fileExt=".cpp" fileName="fnc_constraint_reader" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;fnc_constraint_reader.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="75" tag="operation_75" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        fnc_constraint_reader.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:46:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="76" parent_class="76" fileExt=".cpp" fileName="md_control_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;md_control_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="77" tag="operation_77" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_control_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:06:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="87" parent_class="87" fileExt=".cpp" fileName="add_constraint" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        add_constraint.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="97" parent_class="97" fileExt=".cpp" fileName="mc_control_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mc_control_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="99" tag="operation_99" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mc_control_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:06:42&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="100" parent_class="100" fileExt=".cpp" fileName="phasespace_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        phasespace_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="104" parent_class="104" fileExt=".cpp" fileName="chi_squared" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        chi_squared.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="1129" parent_class="1129" fileExt=".cpp" fileName="function_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        function_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="2103" parent_class="2103" fileExt=".cpp" fileName="add_function" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        add_function.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="2506" parent_class="2506" fileExt=".cpp" fileName="cutoff_constraint_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;cutoff_constraint_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="2511" tag="operation_2511" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        cutoff_constraint_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sun Jun 8 2008 at 13:57:18&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="3143" parent_class="3143" fileExt=".cpp" fileName="histogram_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        histogram_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="3149" parent_class="3149" fileExt=".cpp" fileName="rdf_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        rdf_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="3155" parent_class="3155" fileExt=".cpp" fileName="rdf_fom_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;rdf_fom_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="3668" tag="operation_3668" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        rdf_fom_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Mar 6 2007 at 14:29:36&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="3864" parent_class="3864" fileExt=".cpp" fileName="add_fom" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        add_fom.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="5341" parent_class="5341" fileExt=".cpp" fileName="mdmc_control_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mdmc_control_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5363" tag="operation_5363" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mdmc_control_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:07:46&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="6175" parent_class="6175" fileExt=".cpp" fileName="func_param_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;func_param_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="6311" tag="operation_6311" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="6526" tag="operation_6526" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="21122" tag="operation_21122" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="21206" tag="operation_21206" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="28471" tag="operation_28471" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="28594" tag="operation_28594" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="28630" tag="operation_28630" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="28702" tag="operation_28702" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="28791" tag="operation_28791" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="28863" tag="operation_28863" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="41234" tag="operation_41234" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        func_param_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Mar 14 2007 at 13:13:30&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="7481" parent_class="7481" fileExt=".cpp" fileName="structure_nn_methods" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;structure_nn_methods.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="13109" tag="operation_13109" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="12918" tag="operation_12918" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="9042" tag="operation_9042" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="42014" tag="operation_42014" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="42049" tag="operation_42049" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14709" tag="operation_14709" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="7555" tag="operation_7555" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="13062" tag="operation_13062" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="13167" tag="operation_13167" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="13319" tag="operation_13319" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="13282" tag="operation_13282" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="42120" tag="operation_42120" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="42175" tag="operation_42175" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_nn_methods.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Feb 13 2007 at 10:32:05&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="9100" parent_class="9100" fileExt=".cpp" fileName="md_property_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;md_property_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="9133" tag="operation_9133" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="9210" tag="operation_9210" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="9228" tag="operation_9228" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="9254" tag="operation_9254" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="21719" tag="operation_21719" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="21791" tag="operation_21791" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_property_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Mar 14 2007 at 12:50:36&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="15556" id="578" parent_class="578" fileExt=".cpp" fileName="lennard_jones_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;lennard_jones_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="750" tag="operation_750" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="14246" tag="operation_14246" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="13541" tag="operation_13541" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="34185" tag="operation_34185" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        lennard_jones_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:33:51&amp;#010;The original location of this file is new_package&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="17314" parent_class="17314" fileExt=".cpp" fileName="handler_structure_part_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;handler_structure_part_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="17527" tag="operation_17527" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="46742" tag="operation_46742" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="46809" tag="operation_46809" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="46831" tag="operation_46831" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="46875" tag="operation_46875" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="46919" tag="operation_46919" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        handler_structure_part_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:56:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="25003" parent_class="25003" fileExt=".cpp" fileName="func_params_wrapper_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        func_params_wrapper_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="29550" parent_class="29550" fileExt=".cpp" fileName="structure_type_definitions" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;structure_type_definitions.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="33460" tag="operation_33460" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="62451" tag="operation_62451" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_type_definitions.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Mar 14 2007 at 12:41:53&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="42422" parent_class="42422" fileExt=".cpp" fileName="time_corr_algorithm" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;time_corr_algorithm.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="55107" tag="operation_55107" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55179" tag="operation_55179" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55389" tag="operation_55389" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="42555" tag="operation_42555" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="43028" tag="operation_43028" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="64417" tag="operation_64417" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="64523" tag="operation_64523" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        time_corr_algorithm.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Mar 14 2007 at 13:06:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="47468" parent_class="47468" fileExt=".cpp" fileName="g_d_readers" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;g_d_readers.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="47553" tag="operation_47553" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        g_d_readers.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:00:59&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="48714" parent_class="48714" fileExt=".cpp" fileName="md_control_time_corr_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;md_control_time_corr_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="48864" tag="operation_48864" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_control_time_corr_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:10:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="48736" parent_class="48736" fileExt=".cpp" fileName="mdmc_control_time_corr_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mdmc_control_time_corr_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="48907" tag="operation_48907" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mdmc_control_time_corr_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:10:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="48758" parent_class="48758" fileExt=".cpp" fileName="md_gridsearch_control_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;md_gridsearch_control_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="48950" tag="operation_48950" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_gridsearch_control_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:10:06&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="51492" parent_class="51492" fileExt=".cpp" fileName="histogram_cutdown_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;histogram_cutdown_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="51840" tag="operation_51840" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="52128" tag="operation_52128" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="52129" tag="operation_52129" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        histogram_cutdown_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sun Jun 8 2008 at 13:53:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="52572" parent_class="52572" fileExt=".cpp" fileName="time_corr_hist_container_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;time_corr_hist_container_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="52727" tag="operation_52727" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="53459" tag="operation_53459" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="53667" tag="operation_53667" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="53852" tag="operation_53852" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="64940" tag="operation_64940" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="64992" tag="operation_64992" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="65094" tag="operation_65094" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="65198" tag="operation_65198" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="65280" tag="operation_65280" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        time_corr_hist_container_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Mar 14 2007 at 13:13:26&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="57253" parent_class="57253" fileExt=".cpp" fileName="s_q_time_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;s_q_time_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="57801" tag="operation_57801" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="58752" tag="operation_58752" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="57556" tag="operation_57556" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        s_q_time_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Mar 6 2007 at 14:19:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="57277" parent_class="57277" fileExt=".cpp" fileName="s_q_omega_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;s_q_omega_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="58898" tag="operation_58898" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="58973" tag="operation_58973" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="59023" tag="operation_59023" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="59249" tag="operation_59249" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        s_q_omega_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Mar 6 2007 at 14:11:47&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="59604" parent_class="59604" fileExt=".cpp" fileName="s_q_omega_fom_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;s_q_omega_fom_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="59680" tag="operation_59680" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        s_q_omega_fom_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Mar 6 2007 at 14:24:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="60308" parent_class="60308" fileExt=".cpp" fileName="g_d_hist_fom_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;g_d_hist_fom_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="60387" tag="operation_60387" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        g_d_hist_fom_class.cpp - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Mar 8 2007 at 09:25:21&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader41996" parent_class="41996" fileExt=".h" fileName="list" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        list.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader34562" parent_class="34562" fileExt=".h" fileName="histrogram" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        histrogram.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader23" parent_class="23" fileExt=".h" fileName="structure_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader30" parent_class="30" fileExt=".h" fileName="fnc_constraint_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FNC_CONSTRAINT_CLASS_H&amp;#010;#define FNC_CONSTRAINT_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;structure_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FNC_CONSTRAINT_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        fnc_constraint_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sun Jun 8 2008 at 13:57:10&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader34" parent_class="34" fileExt=".h" fileName="configuration_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        configuration_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="980" field_type="1" initialValue="" role_id="0" writeOutMethods="false" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" configuration_class ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="89" field_type="4" initialValue="" role_id="1" writeOutMethods="false" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" configuration_class ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader57" parent_class="57" fileExt=".h" fileName="common_block_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef COMMON_BLOCK_CLASS_H&amp;#010;#define COMMON_BLOCK_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;func_params_wrapper_class.h&quot;&amp;#010;#include &quot;configuration_class.h&quot;&amp;#010;#include &quot;time_corr_algorithm.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //COMMON_BLOCK_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        common_block_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Mar 14 2007 at 12:50:42&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="58" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="58" tag="tblock_0" canDelete="false" indentLevel="1" text=" configuration common_config;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="58" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="58" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="58" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="58" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="60" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="60" tag="tblock_3" canDelete="false" indentLevel="1" text=" fnc_constraint target_fnc_constr;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="60" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="60" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="60" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="60" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2910" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2910" tag="tblock_4" canDelete="false" indentLevel="1" text=" cutoff_constraint target_cutoff_constr;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2910" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="2910" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2910" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="2910" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16299" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16299" tag="tblock_1" canDelete="false" indentLevel="1" text=" func_list common_pe_list;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16299" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="16299" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16299" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="16299" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16315" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16315" tag="tblock_2" canDelete="false" indentLevel="1" text=" func_list common_fom_list;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16315" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="16315" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16315" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="16315" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16331" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16331" tag="tblock_5" canDelete="false" indentLevel="1" text=" lj_pe_container target_lj_pe;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16331" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="16331" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16331" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="16331" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16468" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16468" tag="tblock_6" canDelete="false" indentLevel="1" text=" rdf_fom_container target_rdf_fom;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16468" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="16468" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16468" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="16468" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader61" parent_class="61" fileExt=".h" fileName="handler_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef HANDLER_CLASS_H&amp;#010;#define HANDLER_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //HANDLER_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        handler_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:46:30&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader62" parent_class="62" fileExt=".h" fileName="mdmc" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MDMC_H&amp;#010;#define MDMC_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MDMC_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mdmc.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:45:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader65" parent_class="65" fileExt=".h" fileName="structure_reader_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STRUCTURE_READER_CLASS_H&amp;#010;#define STRUCTURE_READER_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STRUCTURE_READER_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_reader_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:01:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader74" parent_class="74" fileExt=".h" fileName="fnc_constraint_reader" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FNC_CONSTRAINT_READER_H&amp;#010;#define FNC_CONSTRAINT_READER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FNC_CONSTRAINT_READER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        fnc_constraint_reader.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:46:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader76" parent_class="76" fileExt=".h" fileName="md_control_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MD_CONTROL_CLASS_H&amp;#010;#define MD_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MD_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_control_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:06:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader87" parent_class="87" fileExt=".h" fileName="add_constraint" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        add_constraint.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="980" field_type="1" initialValue="" role_id="1" writeOutMethods="false" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" add_constraint ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="980" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="980" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="89" field_type="4" initialValue="" role_id="0" writeOutMethods="false" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" add_constraint ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="89" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="89" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader97" parent_class="97" fileExt=".h" fileName="mc_control_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MC_CONTROL_CLASS_H&amp;#010;#define MC_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MC_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mc_control_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:06:42&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader100" parent_class="100" fileExt=".h" fileName="phasespace_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        phasespace_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader104" parent_class="104" fileExt=".h" fileName="chi_squared" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        chi_squared.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader1129" parent_class="1129" fileExt=".h" fileName="function_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        function_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader2103" parent_class="2103" fileExt=".h" fileName="add_function" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        add_function.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader2506" parent_class="2506" fileExt=".h" fileName="cutoff_constraint_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CUTOFF_CONSTRAINT_CLASS_H&amp;#010;#define CUTOFF_CONSTRAINT_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;structure_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CUTOFF_CONSTRAINT_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        cutoff_constraint_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sun Jun 8 2008 at 13:57:18&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader3143" parent_class="3143" fileExt=".h" fileName="histogram_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        histogram_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="26149" field_type="1" initialValue="" role_id="1" writeOutMethods="false" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" histogram_class ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader3149" parent_class="3149" fileExt=".h" fileName="rdf_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        rdf_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader3155" parent_class="3155" fileExt=".h" fileName="rdf_fom_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RDF_FOM_CLASS_H&amp;#010;#define RDF_FOM_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RDF_FOM_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        rdf_fom_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Mar 6 2007 at 14:29:36&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader3864" parent_class="3864" fileExt=".h" fileName="add_fom" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        add_fom.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader5341" parent_class="5341" fileExt=".h" fileName="mdmc_control_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MDMC_CONTROL_CLASS_H&amp;#010;#define MDMC_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MDMC_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mdmc_control_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:07:46&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader6175" parent_class="6175" fileExt=".h" fileName="func_param_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FUNC_PARAM_CLASS_H&amp;#010;#define FUNC_PARAM_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FUNC_PARAM_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        func_param_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Mar 14 2007 at 13:13:30&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader7481" parent_class="7481" fileExt=".h" fileName="structure_nn_methods" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STRUCTURE_NN_METHODS_H&amp;#010;#define STRUCTURE_NN_METHODS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STRUCTURE_NN_METHODS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_nn_methods.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Feb 13 2007 at 10:32:05&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="26149" field_type="1" initialValue="" role_id="0" writeOutMethods="false" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" structure_nn_methods ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="26149" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="26149" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader9100" parent_class="9100" fileExt=".h" fileName="md_property_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MD_PROPERTY_CLASS_H&amp;#010;#define MD_PROPERTY_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;phasespace_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MD_PROPERTY_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_property_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Mar 14 2007 at 12:50:36&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="15556" id="cppheader578" parent_class="578" fileExt=".h" fileName="lennard_jones_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LENNARD_JONES_CLASS_H&amp;#010;#define LENNARD_JONES_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LENNARD_JONES_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        lennard_jones_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:33:51&amp;#010;The original location of this file is new_package&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader17314" parent_class="17314" fileExt=".h" fileName="handler_structure_part_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef HANDLER_STRUCTURE_PART_CLASS_H&amp;#010;#define HANDLER_STRUCTURE_PART_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //HANDLER_STRUCTURE_PART_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        handler_structure_part_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:56:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader25003" parent_class="25003" fileExt=".h" fileName="func_params_wrapper_class" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        func_params_wrapper_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 15:32:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader29550" parent_class="29550" fileExt=".h" fileName="structure_type_definitions" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STRUCTURE_TYPE_DEFINITIONS_H&amp;#010;#define STRUCTURE_TYPE_DEFINITIONS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STRUCTURE_TYPE_DEFINITIONS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        structure_type_definitions.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Mar 14 2007 at 12:41:53&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader42422" parent_class="42422" fileExt=".h" fileName="time_corr_algorithm" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef TIME_CORR_ALGORITHM_H&amp;#010;#define TIME_CORR_ALGORITHM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;time_corr_hist_container_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //TIME_CORR_ALGORITHM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        time_corr_algorithm.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Mar 14 2007 at 13:06:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="55759" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55759" tag="tblock_0" canDelete="false" indentLevel="1" text=" int n_buffer_average_over;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55759" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="55759" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55759" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="55759" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55806" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55806" tag="tblock_2" canDelete="false" indentLevel="1" text=" int n_time_buffers;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55806" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="55806" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55806" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="55806" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="56042" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="56042" tag="tblock_5" canDelete="false" indentLevel="1" text=" buffer(:) bufs;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="56042" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="56042" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="56042" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="56042" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="56158" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="56158" tag="tblock_8" canDelete="false" indentLevel="1" text=" int num_buffs_cal_thus_far;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="56158" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="56158" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="56158" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="56158" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader47468" parent_class="47468" fileExt=".h" fileName="g_d_readers" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef G_D_READERS_H&amp;#010;#define G_D_READERS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //G_D_READERS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        g_d_readers.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:00:59&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader48714" parent_class="48714" fileExt=".h" fileName="md_control_time_corr_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MD_CONTROL_TIME_CORR_CLASS_H&amp;#010;#define MD_CONTROL_TIME_CORR_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MD_CONTROL_TIME_CORR_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_control_time_corr_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:10:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader48736" parent_class="48736" fileExt=".h" fileName="mdmc_control_time_corr_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MDMC_CONTROL_TIME_CORR_CLASS_H&amp;#010;#define MDMC_CONTROL_TIME_CORR_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MDMC_CONTROL_TIME_CORR_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mdmc_control_time_corr_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:10:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader48758" parent_class="48758" fileExt=".h" fileName="md_gridsearch_control_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MD_GRIDSEARCH_CONTROL_CLASS_H&amp;#010;#define MD_GRIDSEARCH_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MD_GRIDSEARCH_CONTROL_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        md_gridsearch_control_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Dec 13 2006 at 16:10:06&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader51492" parent_class="51492" fileExt=".h" fileName="histogram_cutdown_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef HISTOGRAM_CUTDOWN_CLASS_H&amp;#010;#define HISTOGRAM_CUTDOWN_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //HISTOGRAM_CUTDOWN_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        histogram_cutdown_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sun Jun 8 2008 at 13:53:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader52572" parent_class="52572" fileExt=".h" fileName="time_corr_hist_container_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef TIME_CORR_HIST_CONTAINER_CLASS_H&amp;#010;#define TIME_CORR_HIST_CONTAINER_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;histogram_cutdown_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //TIME_CORR_HIST_CONTAINER_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        time_corr_hist_container_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Wed Mar 14 2007 at 13:13:26&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="56297" field_type="0" initialValue="output/einstein_diffuse_exp" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="56297" tag="tblock_0" canDelete="false" indentLevel="1" text=" string filename_prefix1;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="56297" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="56297" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="56297" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="56297" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="56321" field_type="0" initialValue="1" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="56321" tag="tblock_2" canDelete="false" indentLevel="1" text=" int filename_number1;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="56321" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="56321" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="56321" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="56321" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="56345" field_type="0" initialValue="output/g_s" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="56345" tag="tblock_5" canDelete="false" indentLevel="1" text=" string filename_prefix2;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="56345" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="56345" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="56345" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="56345" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="56369" field_type="0" initialValue="1" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="56369" tag="tblock_8" canDelete="false" indentLevel="1" text=" int filename_number2;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="56369" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="56369" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="56369" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="56369" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="56393" field_type="0" initialValue="output/g_d" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="56393" tag="tblock_11" canDelete="false" indentLevel="1" text=" string filename_prefix3;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="56393" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="56393" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="56393" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="56393" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="56417" field_type="0" initialValue="1" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="56417" tag="tblock_14" canDelete="false" indentLevel="1" text=" int filename_number3;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="56417" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="56417" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="56417" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="56417" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader57253" parent_class="57253" fileExt=".h" fileName="s_q_time_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef S_Q_TIME_CLASS_H&amp;#010;#define S_Q_TIME_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //S_Q_TIME_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        s_q_time_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Mar 6 2007 at 14:19:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader57277" parent_class="57277" fileExt=".h" fileName="s_q_omega_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef S_Q_OMEGA_CLASS_H&amp;#010;#define S_Q_OMEGA_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //S_Q_OMEGA_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        s_q_omega_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Mar 6 2007 at 14:11:47&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="59377" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="59377" tag="tblock_0" canDelete="false" indentLevel="1" text=" s_q_time private_s_q_time;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="59377" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="59377" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="59377" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="59377" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader59604" parent_class="59604" fileExt=".h" fileName="s_q_omega_fom_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef S_Q_OMEGA_FOM_CLASS_H&amp;#010;#define S_Q_OMEGA_FOM_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //S_Q_OMEGA_FOM_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        s_q_omega_fom_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Mar 6 2007 at 14:24:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader60308" parent_class="60308" fileExt=".h" fileName="g_d_hist_fom_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef G_D_HIST_FOM_CLASS_H&amp;#010;#define G_D_HIST_FOM_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //G_D_HIST_FOM_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        g_d_hist_fom_class.h - Copyright ajm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Mar 8 2007 at 09:25:21&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
